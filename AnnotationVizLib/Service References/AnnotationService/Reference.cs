//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnnotationVizLib.AnnotationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataObject", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.PermittedStructureLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.DataObjectWithKeyOflong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationPositionOnly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.DataObjectWithParentOflong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.Structure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureType))]
    public partial class DataObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.DBACTION DBActionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.DBACTION DBAction {
            get {
                return this.DBActionField;
            }
            set {
                if ((this.DBActionField.Equals(value) != true)) {
                    this.DBActionField = value;
                    this.RaisePropertyChanged("DBAction");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermittedStructureLink", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class PermittedStructureLink : AnnotationVizLib.AnnotationService.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BidirectionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SourceTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Bidirectional {
            get {
                return this.BidirectionalField;
            }
            set {
                if ((this.BidirectionalField.Equals(value) != true)) {
                    this.BidirectionalField = value;
                    this.RaisePropertyChanged("Bidirectional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SourceTypeID {
            get {
                return this.SourceTypeIDField;
            }
            set {
                if ((this.SourceTypeIDField.Equals(value) != true)) {
                    this.SourceTypeIDField = value;
                    this.RaisePropertyChanged("SourceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetTypeID {
            get {
                return this.TargetTypeIDField;
            }
            set {
                if ((this.TargetTypeIDField.Equals(value) != true)) {
                    this.TargetTypeIDField = value;
                    this.RaisePropertyChanged("TargetTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructureLink", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class StructureLink : AnnotationVizLib.AnnotationService.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BidirectionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Bidirectional {
            get {
                return this.BidirectionalField;
            }
            set {
                if ((this.BidirectionalField.Equals(value) != true)) {
                    this.BidirectionalField = value;
                    this.RaisePropertyChanged("Bidirectional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((this.SourceIDField.Equals(value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetID {
            get {
                return this.TargetIDField;
            }
            set {
                if ((this.TargetIDField.Equals(value) != true)) {
                    this.TargetIDField = value;
                    this.RaisePropertyChanged("TargetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationLink", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class LocationLink : AnnotationVizLib.AnnotationService.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((this.SourceIDField.Equals(value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetID {
            get {
                return this.TargetIDField;
            }
            set {
                if ((this.TargetIDField.Equals(value) != true)) {
                    this.TargetIDField = value;
                    this.RaisePropertyChanged("TargetID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataObjectWithKeyOflong", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationPositionOnly))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.DataObjectWithParentOflong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.Structure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureType))]
    public partial class DataObjectWithKeyOflong : AnnotationVizLib.AnnotationService.DataObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationHistory))]
    public partial class Location : AnnotationVizLib.AnnotationService.DataObjectWithKeyOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributesXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] LinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.Entity.Spatial.DbGeometry MosaicShapeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OffEdgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.AnnotationPoint PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TerminalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.AnnotationPoint VolumePositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.Entity.Spatial.DbGeometry VolumeShapeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributesXml {
            get {
                return this.AttributesXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesXmlField, value) != true)) {
                    this.AttributesXmlField = value;
                    this.RaisePropertyChanged("AttributesXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Closed {
            get {
                return this.ClosedField;
            }
            set {
                if ((this.ClosedField.Equals(value) != true)) {
                    this.ClosedField = value;
                    this.RaisePropertyChanged("Closed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] Links {
            get {
                return this.LinksField;
            }
            set {
                if ((object.ReferenceEquals(this.LinksField, value) != true)) {
                    this.LinksField = value;
                    this.RaisePropertyChanged("Links");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.Entity.Spatial.DbGeometry MosaicShape {
            get {
                return this.MosaicShapeField;
            }
            set {
                if ((object.ReferenceEquals(this.MosaicShapeField, value) != true)) {
                    this.MosaicShapeField = value;
                    this.RaisePropertyChanged("MosaicShape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OffEdge {
            get {
                return this.OffEdgeField;
            }
            set {
                if ((this.OffEdgeField.Equals(value) != true)) {
                    this.OffEdgeField = value;
                    this.RaisePropertyChanged("OffEdge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.AnnotationPoint Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Section {
            get {
                return this.SectionField;
            }
            set {
                if ((this.SectionField.Equals(value) != true)) {
                    this.SectionField = value;
                    this.RaisePropertyChanged("Section");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Terminal {
            get {
                return this.TerminalField;
            }
            set {
                if ((this.TerminalField.Equals(value) != true)) {
                    this.TerminalField = value;
                    this.RaisePropertyChanged("Terminal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((this.TypeCodeField.Equals(value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.AnnotationPoint VolumePosition {
            get {
                return this.VolumePositionField;
            }
            set {
                if ((this.VolumePositionField.Equals(value) != true)) {
                    this.VolumePositionField = value;
                    this.RaisePropertyChanged("VolumePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.Entity.Spatial.DbGeometry VolumeShape {
            get {
                return this.VolumeShapeField;
            }
            set {
                if ((object.ReferenceEquals(this.VolumeShapeField, value) != true)) {
                    this.VolumeShapeField = value;
                    this.RaisePropertyChanged("VolumeShape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationHistory", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class LocationHistory : AnnotationVizLib.AnnotationService.Location {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ChangedColumnMaskField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ChangedColumnMask {
            get {
                return this.ChangedColumnMaskField;
            }
            set {
                if ((this.ChangedColumnMaskField.Equals(value) != true)) {
                    this.ChangedColumnMaskField = value;
                    this.RaisePropertyChanged("ChangedColumnMask");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationPositionOnly", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class LocationPositionOnly : AnnotationVizLib.AnnotationService.DataObjectWithKeyOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.AnnotationPoint PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.AnnotationPoint Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataObjectWithParentOflong", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.Structure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureType))]
    public partial class DataObjectWithParentOflong : AnnotationVizLib.AnnotationService.DataObjectWithKeyOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Structure", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureHistory))]
    public partial class Structure : AnnotationVizLib.AnnotationService.DataObjectWithParentOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributesXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ChildIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ConfidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.StructureLink[] LinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerifiedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributesXml {
            get {
                return this.AttributesXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesXmlField, value) != true)) {
                    this.AttributesXmlField = value;
                    this.RaisePropertyChanged("AttributesXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] ChildIDs {
            get {
                return this.ChildIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildIDsField, value) != true)) {
                    this.ChildIDsField = value;
                    this.RaisePropertyChanged("ChildIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Confidence {
            get {
                return this.ConfidenceField;
            }
            set {
                if ((this.ConfidenceField.Equals(value) != true)) {
                    this.ConfidenceField = value;
                    this.RaisePropertyChanged("Confidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.StructureLink[] Links {
            get {
                return this.LinksField;
            }
            set {
                if ((object.ReferenceEquals(this.LinksField, value) != true)) {
                    this.LinksField = value;
                    this.RaisePropertyChanged("Links");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructureHistory", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class StructureHistory : AnnotationVizLib.AnnotationService.Structure {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructureType", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class StructureType : AnnotationVizLib.AnnotationService.DataObjectWithParentOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AbstractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char HotKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkupTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.PermittedStructureLink[] PermittedLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] StructureTagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TagsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Abstract {
            get {
                return this.AbstractField;
            }
            set {
                if ((this.AbstractField.Equals(value) != true)) {
                    this.AbstractField = value;
                    this.RaisePropertyChanged("Abstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char HotKey {
            get {
                return this.HotKeyField;
            }
            set {
                if ((this.HotKeyField.Equals(value) != true)) {
                    this.HotKeyField = value;
                    this.RaisePropertyChanged("HotKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkupType {
            get {
                return this.MarkupTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkupTypeField, value) != true)) {
                    this.MarkupTypeField = value;
                    this.RaisePropertyChanged("MarkupType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.PermittedStructureLink[] PermittedLinks {
            get {
                return this.PermittedLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.PermittedLinksField, value) != true)) {
                    this.PermittedLinksField = value;
                    this.RaisePropertyChanged("PermittedLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] StructureTags {
            get {
                return this.StructureTagsField;
            }
            set {
                if ((object.ReferenceEquals(this.StructureTagsField, value) != true)) {
                    this.StructureTagsField = value;
                    this.RaisePropertyChanged("StructureTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBACTION", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    public enum DBACTION : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NONE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSERT = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPDATE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELETE = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotationPoint", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial struct AnnotationPoint : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ZField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateStructureRetval", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class CreateStructureRetval : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.Location locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.Structure structureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.Location location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.Structure structure {
            get {
                return this.structureField;
            }
            set {
                if ((object.ReferenceEquals(this.structureField, value) != true)) {
                    this.structureField = value;
                    this.RaisePropertyChanged("structure");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoundingRectangle", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial struct BoundingRectangle : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YMinField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double XMax {
            get {
                return this.XMaxField;
            }
            set {
                if ((this.XMaxField.Equals(value) != true)) {
                    this.XMaxField = value;
                    this.RaisePropertyChanged("XMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double XMin {
            get {
                return this.XMinField;
            }
            set {
                if ((this.XMinField.Equals(value) != true)) {
                    this.XMinField = value;
                    this.RaisePropertyChanged("XMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double YMax {
            get {
                return this.YMaxField;
            }
            set {
                if ((this.YMaxField.Equals(value) != true)) {
                    this.YMaxField = value;
                    this.RaisePropertyChanged("YMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double YMin {
            get {
                return this.YMinField;
            }
            set {
                if ((this.YMinField.Equals(value) != true)) {
                    this.YMinField = value;
                    this.RaisePropertyChanged("YMin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotationSet", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class AnnotationSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.Location[] LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.Structure[] StructuresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.Location[] Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.Structure[] Structures {
            get {
                return this.StructuresField;
            }
            set {
                if ((object.ReferenceEquals(this.StructuresField, value) != true)) {
                    this.StructuresField = value;
                    this.RaisePropertyChanged("Structures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Scale", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class Scale : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.AxisUnits XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.AxisUnits YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.AxisUnits ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.AxisUnits X {
            get {
                return this.XField;
            }
            set {
                if ((object.ReferenceEquals(this.XField, value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.AxisUnits Y {
            get {
                return this.YField;
            }
            set {
                if ((object.ReferenceEquals(this.YField, value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.AxisUnits Z {
            get {
                return this.ZField;
            }
            set {
                if ((object.ReferenceEquals(this.ZField, value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AxisUnits", Namespace="http://schemas.datacontract.org/2004/07/Annotation")]
    [System.SerializableAttribute()]
    public partial class AxisUnits : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Graphx", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Graphx : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.Edgex[] EdgeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] FrontierNodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] InvolvedCellsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<long, AnnotationVizLib.AnnotationService.Structure> NodeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ReducedEdgesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] _FrontierNodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<long, AnnotationVizLib.AnnotationService.LocationInfo> locationInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<long, long> zLocationForSynapsesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.Edgex[] EdgeList {
            get {
                return this.EdgeListField;
            }
            set {
                if ((object.ReferenceEquals(this.EdgeListField, value) != true)) {
                    this.EdgeListField = value;
                    this.RaisePropertyChanged("EdgeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] FrontierNodes {
            get {
                return this.FrontierNodesField;
            }
            set {
                if ((object.ReferenceEquals(this.FrontierNodesField, value) != true)) {
                    this.FrontierNodesField = value;
                    this.RaisePropertyChanged("FrontierNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] InvolvedCells {
            get {
                return this.InvolvedCellsField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvedCellsField, value) != true)) {
                    this.InvolvedCellsField = value;
                    this.RaisePropertyChanged("InvolvedCells");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<long, AnnotationVizLib.AnnotationService.Structure> NodeList {
            get {
                return this.NodeListField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeListField, value) != true)) {
                    this.NodeListField = value;
                    this.RaisePropertyChanged("NodeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] ReducedEdges {
            get {
                return this.ReducedEdgesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReducedEdgesField, value) != true)) {
                    this.ReducedEdgesField = value;
                    this.RaisePropertyChanged("ReducedEdges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] _FrontierNodes {
            get {
                return this._FrontierNodesField;
            }
            set {
                if ((object.ReferenceEquals(this._FrontierNodesField, value) != true)) {
                    this._FrontierNodesField = value;
                    this.RaisePropertyChanged("_FrontierNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<long, AnnotationVizLib.AnnotationService.LocationInfo> locationInfo {
            get {
                return this.locationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.locationInfoField, value) != true)) {
                    this.locationInfoField = value;
                    this.RaisePropertyChanged("locationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<long, long> zLocationForSynapses {
            get {
                return this.zLocationForSynapsesField;
            }
            set {
                if ((object.ReferenceEquals(this.zLocationForSynapsesField, value) != true)) {
                    this.zLocationForSynapsesField = value;
                    this.RaisePropertyChanged("zLocationForSynapses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Edgex", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Edgex : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.StructureLink LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SourceParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetParentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.StructureLink Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((this.SourceIDField.Equals(value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SourceParentID {
            get {
                return this.SourceParentIDField;
            }
            set {
                if ((this.SourceParentIDField.Equals(value) != true)) {
                    this.SourceParentIDField = value;
                    this.RaisePropertyChanged("SourceParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceTypeName {
            get {
                return this.SourceTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceTypeNameField, value) != true)) {
                    this.SourceTypeNameField = value;
                    this.RaisePropertyChanged("SourceTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetID {
            get {
                return this.TargetIDField;
            }
            set {
                if ((this.TargetIDField.Equals(value) != true)) {
                    this.TargetIDField = value;
                    this.RaisePropertyChanged("TargetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetParentID {
            get {
                return this.TargetParentIDField;
            }
            set {
                if ((this.TargetParentIDField.Equals(value) != true)) {
                    this.TargetParentIDField = value;
                    this.RaisePropertyChanged("TargetParentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationInfo", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class LocationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SynapseObject", Namespace="http://schemas.datacontract.org/2004/07/Annotation.Service.GraphClasses")]
    [System.SerializableAttribute()]
    public partial class SynapseObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLib.AnnotationService.SynapseStats[] objListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLib.AnnotationService.SynapseStats[] objList {
            get {
                return this.objListField;
            }
            set {
                if ((object.ReferenceEquals(this.objListField, value) != true)) {
                    this.objListField = value;
                    this.RaisePropertyChanged("objList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SynapseStats", Namespace="http://schemas.datacontract.org/2004/07/Annotation.Service.GraphClasses")]
    [System.SerializableAttribute()]
    public partial class SynapseStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] synapsesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] synapses {
            get {
                return this.synapsesField;
            }
            set {
                if ((object.ReferenceEquals(this.synapsesField, value) != true)) {
                    this.synapsesField = value;
                    this.RaisePropertyChanged("synapses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.IAnnotateStructureTypes")]
    public interface IAnnotateStructureTypes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/CreateStructureType", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/CreateStructureTypeResponse")]
        AnnotationVizLib.AnnotationService.StructureType CreateStructureType(AnnotationVizLib.AnnotationService.StructureType obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/CreateStructureType", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/CreateStructureTypeResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureType> CreateStructureTypeAsync(AnnotationVizLib.AnnotationService.StructureType obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypes", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypesResponse")]
        AnnotationVizLib.AnnotationService.StructureType[] GetStructureTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypes", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypesResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureType[]> GetStructureTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypeByID", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypeByIDResponse")]
        AnnotationVizLib.AnnotationService.StructureType GetStructureTypeByID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypeByID", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypeByIDResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureType> GetStructureTypeByIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypesByIDs", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypesByIDsResponse")]
        AnnotationVizLib.AnnotationService.StructureType[] GetStructureTypesByIDs(long[] IDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypesByIDs", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypesByIDsResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureType[]> GetStructureTypesByIDsAsync(long[] IDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/UpdateStructureTypes", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/UpdateStructureTypesResponse")]
        long[] UpdateStructureTypes(AnnotationVizLib.AnnotationService.StructureType[] structType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/UpdateStructureTypes", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/UpdateStructureTypesResponse")]
        System.Threading.Tasks.Task<long[]> UpdateStructureTypesAsync(AnnotationVizLib.AnnotationService.StructureType[] structType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/CreatePermittedStructureLink", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/CreatePermittedStructureLinkResponse")]
        AnnotationVizLib.AnnotationService.PermittedStructureLink CreatePermittedStructureLink(AnnotationVizLib.AnnotationService.PermittedStructureLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/CreatePermittedStructureLink", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/CreatePermittedStructureLinkResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.PermittedStructureLink> CreatePermittedStructureLinkAsync(AnnotationVizLib.AnnotationService.PermittedStructureLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/UpdatePermittedStructureLinks", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/UpdatePermittedStructureLinksResponse")]
        void UpdatePermittedStructureLinks(AnnotationVizLib.AnnotationService.PermittedStructureLink[] permittedStructureLinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/UpdatePermittedStructureLinks", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/UpdatePermittedStructureLinksResponse")]
        System.Threading.Tasks.Task UpdatePermittedStructureLinksAsync(AnnotationVizLib.AnnotationService.PermittedStructureLink[] permittedStructureLinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/TestMethod", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/TestMethodResponse")]
        string TestMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/TestMethod", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/TestMethodResponse")]
        System.Threading.Tasks.Task<string> TestMethodAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnnotateStructureTypesChannel : AnnotationVizLib.AnnotationService.IAnnotateStructureTypes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnnotateStructureTypesClient : System.ServiceModel.ClientBase<AnnotationVizLib.AnnotationService.IAnnotateStructureTypes>, AnnotationVizLib.AnnotationService.IAnnotateStructureTypes {
        
        public AnnotateStructureTypesClient() {
        }
        
        public AnnotateStructureTypesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnnotateStructureTypesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateStructureTypesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateStructureTypesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.StructureType CreateStructureType(AnnotationVizLib.AnnotationService.StructureType obj) {
            return base.Channel.CreateStructureType(obj);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureType> CreateStructureTypeAsync(AnnotationVizLib.AnnotationService.StructureType obj) {
            return base.Channel.CreateStructureTypeAsync(obj);
        }
        
        public AnnotationVizLib.AnnotationService.StructureType[] GetStructureTypes() {
            return base.Channel.GetStructureTypes();
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureType[]> GetStructureTypesAsync() {
            return base.Channel.GetStructureTypesAsync();
        }
        
        public AnnotationVizLib.AnnotationService.StructureType GetStructureTypeByID(long ID) {
            return base.Channel.GetStructureTypeByID(ID);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureType> GetStructureTypeByIDAsync(long ID) {
            return base.Channel.GetStructureTypeByIDAsync(ID);
        }
        
        public AnnotationVizLib.AnnotationService.StructureType[] GetStructureTypesByIDs(long[] IDs) {
            return base.Channel.GetStructureTypesByIDs(IDs);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureType[]> GetStructureTypesByIDsAsync(long[] IDs) {
            return base.Channel.GetStructureTypesByIDsAsync(IDs);
        }
        
        public long[] UpdateStructureTypes(AnnotationVizLib.AnnotationService.StructureType[] structType) {
            return base.Channel.UpdateStructureTypes(structType);
        }
        
        public System.Threading.Tasks.Task<long[]> UpdateStructureTypesAsync(AnnotationVizLib.AnnotationService.StructureType[] structType) {
            return base.Channel.UpdateStructureTypesAsync(structType);
        }
        
        public AnnotationVizLib.AnnotationService.PermittedStructureLink CreatePermittedStructureLink(AnnotationVizLib.AnnotationService.PermittedStructureLink link) {
            return base.Channel.CreatePermittedStructureLink(link);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.PermittedStructureLink> CreatePermittedStructureLinkAsync(AnnotationVizLib.AnnotationService.PermittedStructureLink link) {
            return base.Channel.CreatePermittedStructureLinkAsync(link);
        }
        
        public void UpdatePermittedStructureLinks(AnnotationVizLib.AnnotationService.PermittedStructureLink[] permittedStructureLinks) {
            base.Channel.UpdatePermittedStructureLinks(permittedStructureLinks);
        }
        
        public System.Threading.Tasks.Task UpdatePermittedStructureLinksAsync(AnnotationVizLib.AnnotationService.PermittedStructureLink[] permittedStructureLinks) {
            return base.Channel.UpdatePermittedStructureLinksAsync(permittedStructureLinks);
        }
        
        public string TestMethod() {
            return base.Channel.TestMethod();
        }
        
        public System.Threading.Tasks.Task<string> TestMethodAsync() {
            return base.Channel.TestMethodAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.IAnnotateStructures")]
    public interface IAnnotateStructures {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/CreateStructure", ReplyAction="http://tempuri.org/IAnnotateStructures/CreateStructureResponse")]
        AnnotationVizLib.AnnotationService.CreateStructureRetval CreateStructure(AnnotationVizLib.AnnotationService.Structure structure, AnnotationVizLib.AnnotationService.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/CreateStructure", ReplyAction="http://tempuri.org/IAnnotateStructures/CreateStructureResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.CreateStructureRetval> CreateStructureAsync(AnnotationVizLib.AnnotationService.Structure structure, AnnotationVizLib.AnnotationService.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresResponse")]
        AnnotationVizLib.AnnotationService.Structure[] GetStructures();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure[]> GetStructuresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresForSection", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionResponse")]
        AnnotationVizLib.AnnotationService.GetStructuresForSectionResponse GetStructuresForSection(AnnotationVizLib.AnnotationService.GetStructuresForSectionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresForSection", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetStructuresForSectionResponse> GetStructuresForSectionAsync(AnnotationVizLib.AnnotationService.GetStructuresForSectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInMosaicRegionRespo" +
            "nse")]
        AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionResponse GetStructuresForSectionInMosaicRegion(AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInMosaicRegionRespo" +
            "nse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionResponse> GetStructuresForSectionInMosaicRegionAsync(AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInVolumeRegion", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInVolumeRegionRespo" +
            "nse")]
        AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionResponse GetStructuresForSectionInVolumeRegion(AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInVolumeRegion", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInVolumeRegionRespo" +
            "nse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionResponse> GetStructuresForSectionInVolumeRegionAsync(AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructureByID", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructureByIDResponse")]
        AnnotationVizLib.AnnotationService.Structure GetStructureByID(long ID, bool IncludeChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructureByID", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructureByIDResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure> GetStructureByIDAsync(long ID, bool IncludeChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresByIDs", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresByIDsResponse")]
        AnnotationVizLib.AnnotationService.Structure[] GetStructuresByIDs(long[] ID, bool IncludeChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresByIDs", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresByIDsResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure[]> GetStructuresByIDsAsync(long[] ID, bool IncludeChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/CreateStructureLink", ReplyAction="http://tempuri.org/IAnnotateStructures/CreateStructureLinkResponse")]
        AnnotationVizLib.AnnotationService.StructureLink CreateStructureLink(AnnotationVizLib.AnnotationService.StructureLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/CreateStructureLink", ReplyAction="http://tempuri.org/IAnnotateStructures/CreateStructureLinkResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureLink> CreateStructureLinkAsync(AnnotationVizLib.AnnotationService.StructureLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetLinkedStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/GetLinkedStructuresResponse")]
        AnnotationVizLib.AnnotationService.StructureLink[] GetLinkedStructures();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetLinkedStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/GetLinkedStructuresResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureLink[]> GetLinkedStructuresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetLinkedStructuresByID", ReplyAction="http://tempuri.org/IAnnotateStructures/GetLinkedStructuresByIDResponse")]
        AnnotationVizLib.AnnotationService.StructureLink[] GetLinkedStructuresByID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetLinkedStructuresByID", ReplyAction="http://tempuri.org/IAnnotateStructures/GetLinkedStructuresByIDResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureLink[]> GetLinkedStructuresByIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetNetworkedStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/GetNetworkedStructuresResponse")]
        long[] GetNetworkedStructures(long[] IDs, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetNetworkedStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/GetNetworkedStructuresResponse")]
        System.Threading.Tasks.Task<long[]> GetNetworkedStructuresAsync(long[] IDs, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetChildStructuresInNetwork", ReplyAction="http://tempuri.org/IAnnotateStructures/GetChildStructuresInNetworkResponse")]
        AnnotationVizLib.AnnotationService.Structure[] GetChildStructuresInNetwork(long[] IDs, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetChildStructuresInNetwork", ReplyAction="http://tempuri.org/IAnnotateStructures/GetChildStructuresInNetworkResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure[]> GetChildStructuresInNetworkAsync(long[] IDs, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructureLinksInNetwork", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructureLinksInNetworkResponse")]
        AnnotationVizLib.AnnotationService.StructureLink[] GetStructureLinksInNetwork(long[] IDs, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructureLinksInNetwork", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructureLinksInNetworkResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureLink[]> GetStructureLinksInNetworkAsync(long[] IDs, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/NumberOfLocationsForStructure", ReplyAction="http://tempuri.org/IAnnotateStructures/NumberOfLocationsForStructureResponse")]
        long NumberOfLocationsForStructure(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/NumberOfLocationsForStructure", ReplyAction="http://tempuri.org/IAnnotateStructures/NumberOfLocationsForStructureResponse")]
        System.Threading.Tasks.Task<long> NumberOfLocationsForStructureAsync(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/UpdateStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/UpdateStructuresResponse")]
        long[] UpdateStructures(AnnotationVizLib.AnnotationService.Structure[] structure);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/UpdateStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/UpdateStructuresResponse")]
        System.Threading.Tasks.Task<long[]> UpdateStructuresAsync(AnnotationVizLib.AnnotationService.Structure[] structure);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/UpdateStructureLinks", ReplyAction="http://tempuri.org/IAnnotateStructures/UpdateStructureLinksResponse")]
        void UpdateStructureLinks(AnnotationVizLib.AnnotationService.StructureLink[] structureLinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/UpdateStructureLinks", ReplyAction="http://tempuri.org/IAnnotateStructures/UpdateStructureLinksResponse")]
        System.Threading.Tasks.Task UpdateStructureLinksAsync(AnnotationVizLib.AnnotationService.StructureLink[] structureLinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocations", ReplyAction="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocationsResponse")]
        long[] GetUnfinishedLocations(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocations", ReplyAction="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocationsResponse")]
        System.Threading.Tasks.Task<long[]> GetUnfinishedLocationsAsync(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocationsWithPosition", ReplyAction="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocationsWithPositionResponse" +
            "")]
        AnnotationVizLib.AnnotationService.LocationPositionOnly[] GetUnfinishedLocationsWithPosition(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocationsWithPosition", ReplyAction="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocationsWithPositionResponse" +
            "")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.LocationPositionOnly[]> GetUnfinishedLocationsWithPositionAsync(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresOfType", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresOfTypeResponse")]
        AnnotationVizLib.AnnotationService.Structure[] GetStructuresOfType(long typeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresOfType", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresOfTypeResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure[]> GetStructuresOfTypeAsync(long typeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/Merge", ReplyAction="http://tempuri.org/IAnnotateStructures/MergeResponse")]
        long Merge(long KeepID, long MergeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/Merge", ReplyAction="http://tempuri.org/IAnnotateStructures/MergeResponse")]
        System.Threading.Tasks.Task<long> MergeAsync(long KeepID, long MergeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/Split", ReplyAction="http://tempuri.org/IAnnotateStructures/SplitResponse")]
        long Split(long StructureA, AnnotationVizLib.AnnotationService.LocationLink locLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/Split", ReplyAction="http://tempuri.org/IAnnotateStructures/SplitResponse")]
        System.Threading.Tasks.Task<long> SplitAsync(long StructureA, AnnotationVizLib.AnnotationService.LocationLink locLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructureChangeLog", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructureChangeLogResponse")]
        AnnotationVizLib.AnnotationService.StructureHistory[] GetStructureChangeLog(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructureChangeLog", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructureChangeLogResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureHistory[]> GetStructureChangeLogAsync(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStructuresForSection", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStructuresForSectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long Section;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long ModifiedAfterThisTime;
        
        public GetStructuresForSectionRequest() {
        }
        
        public GetStructuresForSectionRequest(long Section, long ModifiedAfterThisTime) {
            this.Section = Section;
            this.ModifiedAfterThisTime = ModifiedAfterThisTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStructuresForSectionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStructuresForSectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long QueryExecutedTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long[] DeletedIDs;
        
        public GetStructuresForSectionResponse() {
        }
        
        public GetStructuresForSectionResponse(AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionResult, long QueryExecutedTime, long[] DeletedIDs) {
            this.GetStructuresForSectionResult = GetStructuresForSectionResult;
            this.QueryExecutedTime = QueryExecutedTime;
            this.DeletedIDs = DeletedIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStructuresForSectionInMosaicRegion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStructuresForSectionInMosaicRegionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long section;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AnnotationVizLib.AnnotationService.BoundingRectangle bbox;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public double MinRadius;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public long ModifiedAfterThisTime;
        
        public GetStructuresForSectionInMosaicRegionRequest() {
        }
        
        public GetStructuresForSectionInMosaicRegionRequest(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisTime) {
            this.section = section;
            this.bbox = bbox;
            this.MinRadius = MinRadius;
            this.ModifiedAfterThisTime = ModifiedAfterThisTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStructuresForSectionInMosaicRegionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStructuresForSectionInMosaicRegionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInMosaicRegionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long QueryExecutedTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long[] DeletedIDs;
        
        public GetStructuresForSectionInMosaicRegionResponse() {
        }
        
        public GetStructuresForSectionInMosaicRegionResponse(AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInMosaicRegionResult, long QueryExecutedTime, long[] DeletedIDs) {
            this.GetStructuresForSectionInMosaicRegionResult = GetStructuresForSectionInMosaicRegionResult;
            this.QueryExecutedTime = QueryExecutedTime;
            this.DeletedIDs = DeletedIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStructuresForSectionInVolumeRegion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStructuresForSectionInVolumeRegionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long section;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AnnotationVizLib.AnnotationService.BoundingRectangle bbox;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public double MinRadius;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public long ModifiedAfterThisTime;
        
        public GetStructuresForSectionInVolumeRegionRequest() {
        }
        
        public GetStructuresForSectionInVolumeRegionRequest(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisTime) {
            this.section = section;
            this.bbox = bbox;
            this.MinRadius = MinRadius;
            this.ModifiedAfterThisTime = ModifiedAfterThisTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStructuresForSectionInVolumeRegionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStructuresForSectionInVolumeRegionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInVolumeRegionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long QueryExecutedTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long[] DeletedIDs;
        
        public GetStructuresForSectionInVolumeRegionResponse() {
        }
        
        public GetStructuresForSectionInVolumeRegionResponse(AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInVolumeRegionResult, long QueryExecutedTime, long[] DeletedIDs) {
            this.GetStructuresForSectionInVolumeRegionResult = GetStructuresForSectionInVolumeRegionResult;
            this.QueryExecutedTime = QueryExecutedTime;
            this.DeletedIDs = DeletedIDs;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnnotateStructuresChannel : AnnotationVizLib.AnnotationService.IAnnotateStructures, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnnotateStructuresClient : System.ServiceModel.ClientBase<AnnotationVizLib.AnnotationService.IAnnotateStructures>, AnnotationVizLib.AnnotationService.IAnnotateStructures {
        
        public AnnotateStructuresClient() {
        }
        
        public AnnotateStructuresClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnnotateStructuresClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateStructuresClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateStructuresClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.CreateStructureRetval CreateStructure(AnnotationVizLib.AnnotationService.Structure structure, AnnotationVizLib.AnnotationService.Location location) {
            return base.Channel.CreateStructure(structure, location);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.CreateStructureRetval> CreateStructureAsync(AnnotationVizLib.AnnotationService.Structure structure, AnnotationVizLib.AnnotationService.Location location) {
            return base.Channel.CreateStructureAsync(structure, location);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructures() {
            return base.Channel.GetStructures();
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure[]> GetStructuresAsync() {
            return base.Channel.GetStructuresAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AnnotationVizLib.AnnotationService.GetStructuresForSectionResponse AnnotationVizLib.AnnotationService.IAnnotateStructures.GetStructuresForSection(AnnotationVizLib.AnnotationService.GetStructuresForSectionRequest request) {
            return base.Channel.GetStructuresForSection(request);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSection(long Section, long ModifiedAfterThisTime, out long QueryExecutedTime, out long[] DeletedIDs) {
            AnnotationVizLib.AnnotationService.GetStructuresForSectionRequest inValue = new AnnotationVizLib.AnnotationService.GetStructuresForSectionRequest();
            inValue.Section = Section;
            inValue.ModifiedAfterThisTime = ModifiedAfterThisTime;
            AnnotationVizLib.AnnotationService.GetStructuresForSectionResponse retVal = ((AnnotationVizLib.AnnotationService.IAnnotateStructures)(this)).GetStructuresForSection(inValue);
            QueryExecutedTime = retVal.QueryExecutedTime;
            DeletedIDs = retVal.DeletedIDs;
            return retVal.GetStructuresForSectionResult;
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetStructuresForSectionResponse> GetStructuresForSectionAsync(AnnotationVizLib.AnnotationService.GetStructuresForSectionRequest request) {
            return base.Channel.GetStructuresForSectionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionResponse AnnotationVizLib.AnnotationService.IAnnotateStructures.GetStructuresForSectionInMosaicRegion(AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionRequest request) {
            return base.Channel.GetStructuresForSectionInMosaicRegion(request);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInMosaicRegion(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisTime, out long QueryExecutedTime, out long[] DeletedIDs) {
            AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionRequest inValue = new AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionRequest();
            inValue.section = section;
            inValue.bbox = bbox;
            inValue.MinRadius = MinRadius;
            inValue.ModifiedAfterThisTime = ModifiedAfterThisTime;
            AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionResponse retVal = ((AnnotationVizLib.AnnotationService.IAnnotateStructures)(this)).GetStructuresForSectionInMosaicRegion(inValue);
            QueryExecutedTime = retVal.QueryExecutedTime;
            DeletedIDs = retVal.DeletedIDs;
            return retVal.GetStructuresForSectionInMosaicRegionResult;
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionResponse> GetStructuresForSectionInMosaicRegionAsync(AnnotationVizLib.AnnotationService.GetStructuresForSectionInMosaicRegionRequest request) {
            return base.Channel.GetStructuresForSectionInMosaicRegionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionResponse AnnotationVizLib.AnnotationService.IAnnotateStructures.GetStructuresForSectionInVolumeRegion(AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionRequest request) {
            return base.Channel.GetStructuresForSectionInVolumeRegion(request);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInVolumeRegion(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisTime, out long QueryExecutedTime, out long[] DeletedIDs) {
            AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionRequest inValue = new AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionRequest();
            inValue.section = section;
            inValue.bbox = bbox;
            inValue.MinRadius = MinRadius;
            inValue.ModifiedAfterThisTime = ModifiedAfterThisTime;
            AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionResponse retVal = ((AnnotationVizLib.AnnotationService.IAnnotateStructures)(this)).GetStructuresForSectionInVolumeRegion(inValue);
            QueryExecutedTime = retVal.QueryExecutedTime;
            DeletedIDs = retVal.DeletedIDs;
            return retVal.GetStructuresForSectionInVolumeRegionResult;
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionResponse> GetStructuresForSectionInVolumeRegionAsync(AnnotationVizLib.AnnotationService.GetStructuresForSectionInVolumeRegionRequest request) {
            return base.Channel.GetStructuresForSectionInVolumeRegionAsync(request);
        }
        
        public AnnotationVizLib.AnnotationService.Structure GetStructureByID(long ID, bool IncludeChildren) {
            return base.Channel.GetStructureByID(ID, IncludeChildren);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure> GetStructureByIDAsync(long ID, bool IncludeChildren) {
            return base.Channel.GetStructureByIDAsync(ID, IncludeChildren);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresByIDs(long[] ID, bool IncludeChildren) {
            return base.Channel.GetStructuresByIDs(ID, IncludeChildren);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure[]> GetStructuresByIDsAsync(long[] ID, bool IncludeChildren) {
            return base.Channel.GetStructuresByIDsAsync(ID, IncludeChildren);
        }
        
        public AnnotationVizLib.AnnotationService.StructureLink CreateStructureLink(AnnotationVizLib.AnnotationService.StructureLink link) {
            return base.Channel.CreateStructureLink(link);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureLink> CreateStructureLinkAsync(AnnotationVizLib.AnnotationService.StructureLink link) {
            return base.Channel.CreateStructureLinkAsync(link);
        }
        
        public AnnotationVizLib.AnnotationService.StructureLink[] GetLinkedStructures() {
            return base.Channel.GetLinkedStructures();
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureLink[]> GetLinkedStructuresAsync() {
            return base.Channel.GetLinkedStructuresAsync();
        }
        
        public AnnotationVizLib.AnnotationService.StructureLink[] GetLinkedStructuresByID(long ID) {
            return base.Channel.GetLinkedStructuresByID(ID);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureLink[]> GetLinkedStructuresByIDAsync(long ID) {
            return base.Channel.GetLinkedStructuresByIDAsync(ID);
        }
        
        public long[] GetNetworkedStructures(long[] IDs, int numHops) {
            return base.Channel.GetNetworkedStructures(IDs, numHops);
        }
        
        public System.Threading.Tasks.Task<long[]> GetNetworkedStructuresAsync(long[] IDs, int numHops) {
            return base.Channel.GetNetworkedStructuresAsync(IDs, numHops);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetChildStructuresInNetwork(long[] IDs, int numHops) {
            return base.Channel.GetChildStructuresInNetwork(IDs, numHops);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure[]> GetChildStructuresInNetworkAsync(long[] IDs, int numHops) {
            return base.Channel.GetChildStructuresInNetworkAsync(IDs, numHops);
        }
        
        public AnnotationVizLib.AnnotationService.StructureLink[] GetStructureLinksInNetwork(long[] IDs, int numHops) {
            return base.Channel.GetStructureLinksInNetwork(IDs, numHops);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureLink[]> GetStructureLinksInNetworkAsync(long[] IDs, int numHops) {
            return base.Channel.GetStructureLinksInNetworkAsync(IDs, numHops);
        }
        
        public long NumberOfLocationsForStructure(long structureID) {
            return base.Channel.NumberOfLocationsForStructure(structureID);
        }
        
        public System.Threading.Tasks.Task<long> NumberOfLocationsForStructureAsync(long structureID) {
            return base.Channel.NumberOfLocationsForStructureAsync(structureID);
        }
        
        public long[] UpdateStructures(AnnotationVizLib.AnnotationService.Structure[] structure) {
            return base.Channel.UpdateStructures(structure);
        }
        
        public System.Threading.Tasks.Task<long[]> UpdateStructuresAsync(AnnotationVizLib.AnnotationService.Structure[] structure) {
            return base.Channel.UpdateStructuresAsync(structure);
        }
        
        public void UpdateStructureLinks(AnnotationVizLib.AnnotationService.StructureLink[] structureLinks) {
            base.Channel.UpdateStructureLinks(structureLinks);
        }
        
        public System.Threading.Tasks.Task UpdateStructureLinksAsync(AnnotationVizLib.AnnotationService.StructureLink[] structureLinks) {
            return base.Channel.UpdateStructureLinksAsync(structureLinks);
        }
        
        public long[] GetUnfinishedLocations(long structureID) {
            return base.Channel.GetUnfinishedLocations(structureID);
        }
        
        public System.Threading.Tasks.Task<long[]> GetUnfinishedLocationsAsync(long structureID) {
            return base.Channel.GetUnfinishedLocationsAsync(structureID);
        }
        
        public AnnotationVizLib.AnnotationService.LocationPositionOnly[] GetUnfinishedLocationsWithPosition(long structureID) {
            return base.Channel.GetUnfinishedLocationsWithPosition(structureID);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.LocationPositionOnly[]> GetUnfinishedLocationsWithPositionAsync(long structureID) {
            return base.Channel.GetUnfinishedLocationsWithPositionAsync(structureID);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresOfType(long typeID) {
            return base.Channel.GetStructuresOfType(typeID);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Structure[]> GetStructuresOfTypeAsync(long typeID) {
            return base.Channel.GetStructuresOfTypeAsync(typeID);
        }
        
        public long Merge(long KeepID, long MergeID) {
            return base.Channel.Merge(KeepID, MergeID);
        }
        
        public System.Threading.Tasks.Task<long> MergeAsync(long KeepID, long MergeID) {
            return base.Channel.MergeAsync(KeepID, MergeID);
        }
        
        public long Split(long StructureA, AnnotationVizLib.AnnotationService.LocationLink locLink) {
            return base.Channel.Split(StructureA, locLink);
        }
        
        public System.Threading.Tasks.Task<long> SplitAsync(long StructureA, AnnotationVizLib.AnnotationService.LocationLink locLink) {
            return base.Channel.SplitAsync(StructureA, locLink);
        }
        
        public AnnotationVizLib.AnnotationService.StructureHistory[] GetStructureChangeLog(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time) {
            return base.Channel.GetStructureChangeLog(structure_id, begin_time, end_time);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.StructureHistory[]> GetStructureChangeLogAsync(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time) {
            return base.Channel.GetStructureChangeLogAsync(structure_id, begin_time, end_time);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.IAnnotateLocations")]
    public interface IAnnotateLocations {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/CreateLocation", ReplyAction="http://tempuri.org/IAnnotateLocations/CreateLocationResponse")]
        AnnotationVizLib.AnnotationService.Location CreateLocation(AnnotationVizLib.AnnotationService.Location obj, long[] LinkedIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/CreateLocation", ReplyAction="http://tempuri.org/IAnnotateLocations/CreateLocationResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location> CreateLocationAsync(AnnotationVizLib.AnnotationService.Location obj, long[] LinkedIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationByID", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationByIDResponse")]
        AnnotationVizLib.AnnotationService.Location GetLocationByID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationByID", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationByIDResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location> GetLocationByIDAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationsByID", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationsByIDResponse")]
        AnnotationVizLib.AnnotationService.Location[] GetLocationsByID(long[] IDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationsByID", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationsByIDResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location[]> GetLocationsByIDAsync(long[] IDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLastModifiedLocation", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLastModifiedLocationResponse")]
        AnnotationVizLib.AnnotationService.Location GetLastModifiedLocation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLastModifiedLocation", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLastModifiedLocationResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location> GetLastModifiedLocationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLinkedLocations", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLinkedLocationsResponse")]
        long[] GetLinkedLocations(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLinkedLocations", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLinkedLocationsResponse")]
        System.Threading.Tasks.Task<long[]> GetLinkedLocationsAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationsForSection", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationsForSectionResponse")]
        AnnotationVizLib.AnnotationService.GetLocationsForSectionResponse GetLocationsForSection(AnnotationVizLib.AnnotationService.GetLocationsForSectionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationsForSection", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationsForSectionResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationsForSectionResponse> GetLocationsForSectionAsync(AnnotationVizLib.AnnotationService.GetLocationsForSectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationsForStructure", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationsForStructureResponse")]
        AnnotationVizLib.AnnotationService.Location[] GetLocationsForStructure(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationsForStructure", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationsForStructureResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location[]> GetLocationsForStructureAsync(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationChangesInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationChangesInMosaicRegionResponse")]
        AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionResponse GetLocationChangesInMosaicRegion(AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationChangesInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationChangesInMosaicRegionResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionResponse> GetLocationChangesInMosaicRegionAsync(AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetAnnotationsInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateLocations/GetAnnotationsInMosaicRegionResponse")]
        AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionResponse GetAnnotationsInMosaicRegion(AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetAnnotationsInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateLocations/GetAnnotationsInMosaicRegionResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionResponse> GetAnnotationsInMosaicRegionAsync(AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationChanges", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationChangesResponse")]
        AnnotationVizLib.AnnotationService.GetLocationChangesResponse GetLocationChanges(AnnotationVizLib.AnnotationService.GetLocationChangesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationChanges", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationChangesResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationChangesResponse> GetLocationChangesAsync(AnnotationVizLib.AnnotationService.GetLocationChangesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/Update", ReplyAction="http://tempuri.org/IAnnotateLocations/UpdateResponse")]
        long[] Update(AnnotationVizLib.AnnotationService.Location[] locations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/Update", ReplyAction="http://tempuri.org/IAnnotateLocations/UpdateResponse")]
        System.Threading.Tasks.Task<long[]> UpdateAsync(AnnotationVizLib.AnnotationService.Location[] locations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/CreateLocationLink", ReplyAction="http://tempuri.org/IAnnotateLocations/CreateLocationLinkResponse")]
        void CreateLocationLink(long SourceID, long TargetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/CreateLocationLink", ReplyAction="http://tempuri.org/IAnnotateLocations/CreateLocationLinkResponse")]
        System.Threading.Tasks.Task CreateLocationLinkAsync(long SourceID, long TargetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/DeleteLocationLink", ReplyAction="http://tempuri.org/IAnnotateLocations/DeleteLocationLinkResponse")]
        void DeleteLocationLink(long SourceID, long TargetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/DeleteLocationLink", ReplyAction="http://tempuri.org/IAnnotateLocations/DeleteLocationLinkResponse")]
        System.Threading.Tasks.Task DeleteLocationLinkAsync(long SourceID, long TargetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSection", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSectionResponse")]
        AnnotationVizLib.AnnotationService.GetLocationLinksForSectionResponse GetLocationLinksForSection(AnnotationVizLib.AnnotationService.GetLocationLinksForSectionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSection", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSectionResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationLinksForSectionResponse> GetLocationLinksForSectionAsync(AnnotationVizLib.AnnotationService.GetLocationLinksForSectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSectionInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSectionInMosaicRegionRes" +
            "ponse")]
        AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionResponse GetLocationLinksForSectionInMosaicRegion(AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSectionInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSectionInMosaicRegionRes" +
            "ponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionResponse> GetLocationLinksForSectionInMosaicRegionAsync(AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationChangeLog", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationChangeLogResponse")]
        AnnotationVizLib.AnnotationService.LocationHistory[] GetLocationChangeLog(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationChangeLog", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationChangeLogResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.LocationHistory[]> GetLocationChangeLogAsync(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationsForSection", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationsForSectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long section;
        
        public GetLocationsForSectionRequest() {
        }
        
        public GetLocationsForSectionRequest(long section) {
            this.section = section;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationsForSectionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationsForSectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AnnotationVizLib.AnnotationService.Location[] GetLocationsForSectionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long QueryExecutedTime;
        
        public GetLocationsForSectionResponse() {
        }
        
        public GetLocationsForSectionResponse(AnnotationVizLib.AnnotationService.Location[] GetLocationsForSectionResult, long QueryExecutedTime) {
            this.GetLocationsForSectionResult = GetLocationsForSectionResult;
            this.QueryExecutedTime = QueryExecutedTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationChangesInMosaicRegion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationChangesInMosaicRegionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long section;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AnnotationVizLib.AnnotationService.BoundingRectangle bbox;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public double MinRadius;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.Nullable<long> ModifiedAfterThisUtcTime;
        
        public GetLocationChangesInMosaicRegionRequest() {
        }
        
        public GetLocationChangesInMosaicRegionRequest(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, System.Nullable<long> ModifiedAfterThisUtcTime) {
            this.section = section;
            this.bbox = bbox;
            this.MinRadius = MinRadius;
            this.ModifiedAfterThisUtcTime = ModifiedAfterThisUtcTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationChangesInMosaicRegionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationChangesInMosaicRegionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AnnotationVizLib.AnnotationService.Location[] GetLocationChangesInMosaicRegionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long QueryExecutedTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long[] DeletedIDs;
        
        public GetLocationChangesInMosaicRegionResponse() {
        }
        
        public GetLocationChangesInMosaicRegionResponse(AnnotationVizLib.AnnotationService.Location[] GetLocationChangesInMosaicRegionResult, long QueryExecutedTime, long[] DeletedIDs) {
            this.GetLocationChangesInMosaicRegionResult = GetLocationChangesInMosaicRegionResult;
            this.QueryExecutedTime = QueryExecutedTime;
            this.DeletedIDs = DeletedIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnnotationsInMosaicRegion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnnotationsInMosaicRegionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long section;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AnnotationVizLib.AnnotationService.BoundingRectangle bbox;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public double MinRadius;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.Nullable<long> ModifiedAfterThisUtcTime;
        
        public GetAnnotationsInMosaicRegionRequest() {
        }
        
        public GetAnnotationsInMosaicRegionRequest(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, System.Nullable<long> ModifiedAfterThisUtcTime) {
            this.section = section;
            this.bbox = bbox;
            this.MinRadius = MinRadius;
            this.ModifiedAfterThisUtcTime = ModifiedAfterThisUtcTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnnotationsInMosaicRegionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnnotationsInMosaicRegionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AnnotationVizLib.AnnotationService.AnnotationSet GetAnnotationsInMosaicRegionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long QueryExecutedTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long[] DeletedIDs;
        
        public GetAnnotationsInMosaicRegionResponse() {
        }
        
        public GetAnnotationsInMosaicRegionResponse(AnnotationVizLib.AnnotationService.AnnotationSet GetAnnotationsInMosaicRegionResult, long QueryExecutedTime, long[] DeletedIDs) {
            this.GetAnnotationsInMosaicRegionResult = GetAnnotationsInMosaicRegionResult;
            this.QueryExecutedTime = QueryExecutedTime;
            this.DeletedIDs = DeletedIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationChanges", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationChangesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long section;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long ModifiedAfterThisUtcTime;
        
        public GetLocationChangesRequest() {
        }
        
        public GetLocationChangesRequest(long section, long ModifiedAfterThisUtcTime) {
            this.section = section;
            this.ModifiedAfterThisUtcTime = ModifiedAfterThisUtcTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationChangesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationChangesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AnnotationVizLib.AnnotationService.Location[] GetLocationChangesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long QueryExecutedTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public long[] DeletedIDs;
        
        public GetLocationChangesResponse() {
        }
        
        public GetLocationChangesResponse(AnnotationVizLib.AnnotationService.Location[] GetLocationChangesResult, long QueryExecutedTime, long[] DeletedIDs) {
            this.GetLocationChangesResult = GetLocationChangesResult;
            this.QueryExecutedTime = QueryExecutedTime;
            this.DeletedIDs = DeletedIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationLinksForSection", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationLinksForSectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long section;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long ModifiedAfterThisTime;
        
        public GetLocationLinksForSectionRequest() {
        }
        
        public GetLocationLinksForSectionRequest(long section, long ModifiedAfterThisTime) {
            this.section = section;
            this.ModifiedAfterThisTime = ModifiedAfterThisTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationLinksForSectionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationLinksForSectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSectionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long QueryExecutedTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks;
        
        public GetLocationLinksForSectionResponse() {
        }
        
        public GetLocationLinksForSectionResponse(AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSectionResult, long QueryExecutedTime, AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks) {
            this.GetLocationLinksForSectionResult = GetLocationLinksForSectionResult;
            this.QueryExecutedTime = QueryExecutedTime;
            this.DeletedLinks = DeletedLinks;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationLinksForSectionInMosaicRegion", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationLinksForSectionInMosaicRegionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long section;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public AnnotationVizLib.AnnotationService.BoundingRectangle bbox;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public double MinRadius;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public long ModifiedAfterThisUtcTime;
        
        public GetLocationLinksForSectionInMosaicRegionRequest() {
        }
        
        public GetLocationLinksForSectionInMosaicRegionRequest(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisUtcTime) {
            this.section = section;
            this.bbox = bbox;
            this.MinRadius = MinRadius;
            this.ModifiedAfterThisUtcTime = ModifiedAfterThisUtcTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationLinksForSectionInMosaicRegionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLocationLinksForSectionInMosaicRegionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSectionInMosaicRegionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long QueryExecutedTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks;
        
        public GetLocationLinksForSectionInMosaicRegionResponse() {
        }
        
        public GetLocationLinksForSectionInMosaicRegionResponse(AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSectionInMosaicRegionResult, long QueryExecutedTime, AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks) {
            this.GetLocationLinksForSectionInMosaicRegionResult = GetLocationLinksForSectionInMosaicRegionResult;
            this.QueryExecutedTime = QueryExecutedTime;
            this.DeletedLinks = DeletedLinks;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnnotateLocationsChannel : AnnotationVizLib.AnnotationService.IAnnotateLocations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnnotateLocationsClient : System.ServiceModel.ClientBase<AnnotationVizLib.AnnotationService.IAnnotateLocations>, AnnotationVizLib.AnnotationService.IAnnotateLocations {
        
        public AnnotateLocationsClient() {
        }
        
        public AnnotateLocationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnnotateLocationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateLocationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateLocationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.Location CreateLocation(AnnotationVizLib.AnnotationService.Location obj, long[] LinkedIDs) {
            return base.Channel.CreateLocation(obj, LinkedIDs);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location> CreateLocationAsync(AnnotationVizLib.AnnotationService.Location obj, long[] LinkedIDs) {
            return base.Channel.CreateLocationAsync(obj, LinkedIDs);
        }
        
        public AnnotationVizLib.AnnotationService.Location GetLocationByID(long ID) {
            return base.Channel.GetLocationByID(ID);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location> GetLocationByIDAsync(long ID) {
            return base.Channel.GetLocationByIDAsync(ID);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationsByID(long[] IDs) {
            return base.Channel.GetLocationsByID(IDs);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location[]> GetLocationsByIDAsync(long[] IDs) {
            return base.Channel.GetLocationsByIDAsync(IDs);
        }
        
        public AnnotationVizLib.AnnotationService.Location GetLastModifiedLocation() {
            return base.Channel.GetLastModifiedLocation();
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location> GetLastModifiedLocationAsync() {
            return base.Channel.GetLastModifiedLocationAsync();
        }
        
        public long[] GetLinkedLocations(long ID) {
            return base.Channel.GetLinkedLocations(ID);
        }
        
        public System.Threading.Tasks.Task<long[]> GetLinkedLocationsAsync(long ID) {
            return base.Channel.GetLinkedLocationsAsync(ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AnnotationVizLib.AnnotationService.GetLocationsForSectionResponse AnnotationVizLib.AnnotationService.IAnnotateLocations.GetLocationsForSection(AnnotationVizLib.AnnotationService.GetLocationsForSectionRequest request) {
            return base.Channel.GetLocationsForSection(request);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationsForSection(long section, out long QueryExecutedTime) {
            AnnotationVizLib.AnnotationService.GetLocationsForSectionRequest inValue = new AnnotationVizLib.AnnotationService.GetLocationsForSectionRequest();
            inValue.section = section;
            AnnotationVizLib.AnnotationService.GetLocationsForSectionResponse retVal = ((AnnotationVizLib.AnnotationService.IAnnotateLocations)(this)).GetLocationsForSection(inValue);
            QueryExecutedTime = retVal.QueryExecutedTime;
            return retVal.GetLocationsForSectionResult;
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationsForSectionResponse> GetLocationsForSectionAsync(AnnotationVizLib.AnnotationService.GetLocationsForSectionRequest request) {
            return base.Channel.GetLocationsForSectionAsync(request);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationsForStructure(long structureID) {
            return base.Channel.GetLocationsForStructure(structureID);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Location[]> GetLocationsForStructureAsync(long structureID) {
            return base.Channel.GetLocationsForStructureAsync(structureID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionResponse AnnotationVizLib.AnnotationService.IAnnotateLocations.GetLocationChangesInMosaicRegion(AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionRequest request) {
            return base.Channel.GetLocationChangesInMosaicRegion(request);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationChangesInMosaicRegion(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, System.Nullable<long> ModifiedAfterThisUtcTime, out long QueryExecutedTime, out long[] DeletedIDs) {
            AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionRequest inValue = new AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionRequest();
            inValue.section = section;
            inValue.bbox = bbox;
            inValue.MinRadius = MinRadius;
            inValue.ModifiedAfterThisUtcTime = ModifiedAfterThisUtcTime;
            AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionResponse retVal = ((AnnotationVizLib.AnnotationService.IAnnotateLocations)(this)).GetLocationChangesInMosaicRegion(inValue);
            QueryExecutedTime = retVal.QueryExecutedTime;
            DeletedIDs = retVal.DeletedIDs;
            return retVal.GetLocationChangesInMosaicRegionResult;
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionResponse> GetLocationChangesInMosaicRegionAsync(AnnotationVizLib.AnnotationService.GetLocationChangesInMosaicRegionRequest request) {
            return base.Channel.GetLocationChangesInMosaicRegionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionResponse AnnotationVizLib.AnnotationService.IAnnotateLocations.GetAnnotationsInMosaicRegion(AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionRequest request) {
            return base.Channel.GetAnnotationsInMosaicRegion(request);
        }
        
        public AnnotationVizLib.AnnotationService.AnnotationSet GetAnnotationsInMosaicRegion(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, System.Nullable<long> ModifiedAfterThisUtcTime, out long QueryExecutedTime, out long[] DeletedIDs) {
            AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionRequest inValue = new AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionRequest();
            inValue.section = section;
            inValue.bbox = bbox;
            inValue.MinRadius = MinRadius;
            inValue.ModifiedAfterThisUtcTime = ModifiedAfterThisUtcTime;
            AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionResponse retVal = ((AnnotationVizLib.AnnotationService.IAnnotateLocations)(this)).GetAnnotationsInMosaicRegion(inValue);
            QueryExecutedTime = retVal.QueryExecutedTime;
            DeletedIDs = retVal.DeletedIDs;
            return retVal.GetAnnotationsInMosaicRegionResult;
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionResponse> GetAnnotationsInMosaicRegionAsync(AnnotationVizLib.AnnotationService.GetAnnotationsInMosaicRegionRequest request) {
            return base.Channel.GetAnnotationsInMosaicRegionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AnnotationVizLib.AnnotationService.GetLocationChangesResponse AnnotationVizLib.AnnotationService.IAnnotateLocations.GetLocationChanges(AnnotationVizLib.AnnotationService.GetLocationChangesRequest request) {
            return base.Channel.GetLocationChanges(request);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationChanges(long section, long ModifiedAfterThisUtcTime, out long QueryExecutedTime, out long[] DeletedIDs) {
            AnnotationVizLib.AnnotationService.GetLocationChangesRequest inValue = new AnnotationVizLib.AnnotationService.GetLocationChangesRequest();
            inValue.section = section;
            inValue.ModifiedAfterThisUtcTime = ModifiedAfterThisUtcTime;
            AnnotationVizLib.AnnotationService.GetLocationChangesResponse retVal = ((AnnotationVizLib.AnnotationService.IAnnotateLocations)(this)).GetLocationChanges(inValue);
            QueryExecutedTime = retVal.QueryExecutedTime;
            DeletedIDs = retVal.DeletedIDs;
            return retVal.GetLocationChangesResult;
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationChangesResponse> GetLocationChangesAsync(AnnotationVizLib.AnnotationService.GetLocationChangesRequest request) {
            return base.Channel.GetLocationChangesAsync(request);
        }
        
        public long[] Update(AnnotationVizLib.AnnotationService.Location[] locations) {
            return base.Channel.Update(locations);
        }
        
        public System.Threading.Tasks.Task<long[]> UpdateAsync(AnnotationVizLib.AnnotationService.Location[] locations) {
            return base.Channel.UpdateAsync(locations);
        }
        
        public void CreateLocationLink(long SourceID, long TargetID) {
            base.Channel.CreateLocationLink(SourceID, TargetID);
        }
        
        public System.Threading.Tasks.Task CreateLocationLinkAsync(long SourceID, long TargetID) {
            return base.Channel.CreateLocationLinkAsync(SourceID, TargetID);
        }
        
        public void DeleteLocationLink(long SourceID, long TargetID) {
            base.Channel.DeleteLocationLink(SourceID, TargetID);
        }
        
        public System.Threading.Tasks.Task DeleteLocationLinkAsync(long SourceID, long TargetID) {
            return base.Channel.DeleteLocationLinkAsync(SourceID, TargetID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AnnotationVizLib.AnnotationService.GetLocationLinksForSectionResponse AnnotationVizLib.AnnotationService.IAnnotateLocations.GetLocationLinksForSection(AnnotationVizLib.AnnotationService.GetLocationLinksForSectionRequest request) {
            return base.Channel.GetLocationLinksForSection(request);
        }
        
        public AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSection(long section, long ModifiedAfterThisTime, out long QueryExecutedTime, out AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks) {
            AnnotationVizLib.AnnotationService.GetLocationLinksForSectionRequest inValue = new AnnotationVizLib.AnnotationService.GetLocationLinksForSectionRequest();
            inValue.section = section;
            inValue.ModifiedAfterThisTime = ModifiedAfterThisTime;
            AnnotationVizLib.AnnotationService.GetLocationLinksForSectionResponse retVal = ((AnnotationVizLib.AnnotationService.IAnnotateLocations)(this)).GetLocationLinksForSection(inValue);
            QueryExecutedTime = retVal.QueryExecutedTime;
            DeletedLinks = retVal.DeletedLinks;
            return retVal.GetLocationLinksForSectionResult;
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationLinksForSectionResponse> GetLocationLinksForSectionAsync(AnnotationVizLib.AnnotationService.GetLocationLinksForSectionRequest request) {
            return base.Channel.GetLocationLinksForSectionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionResponse AnnotationVizLib.AnnotationService.IAnnotateLocations.GetLocationLinksForSectionInMosaicRegion(AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionRequest request) {
            return base.Channel.GetLocationLinksForSectionInMosaicRegion(request);
        }
        
        public AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSectionInMosaicRegion(long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisUtcTime, out long QueryExecutedTime, out AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks) {
            AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionRequest inValue = new AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionRequest();
            inValue.section = section;
            inValue.bbox = bbox;
            inValue.MinRadius = MinRadius;
            inValue.ModifiedAfterThisUtcTime = ModifiedAfterThisUtcTime;
            AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionResponse retVal = ((AnnotationVizLib.AnnotationService.IAnnotateLocations)(this)).GetLocationLinksForSectionInMosaicRegion(inValue);
            QueryExecutedTime = retVal.QueryExecutedTime;
            DeletedLinks = retVal.DeletedLinks;
            return retVal.GetLocationLinksForSectionInMosaicRegionResult;
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionResponse> GetLocationLinksForSectionInMosaicRegionAsync(AnnotationVizLib.AnnotationService.GetLocationLinksForSectionInMosaicRegionRequest request) {
            return base.Channel.GetLocationLinksForSectionInMosaicRegionAsync(request);
        }
        
        public AnnotationVizLib.AnnotationService.LocationHistory[] GetLocationChangeLog(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time) {
            return base.Channel.GetLocationChangeLog(structure_id, begin_time, end_time);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.LocationHistory[]> GetLocationChangeLogAsync(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time) {
            return base.Channel.GetLocationChangeLogAsync(structure_id, begin_time, end_time);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.IVolumeMeta")]
    public interface IVolumeMeta {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVolumeMeta/GetScale", ReplyAction="http://tempuri.org/IVolumeMeta/GetScaleResponse")]
        AnnotationVizLib.AnnotationService.Scale GetScale();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVolumeMeta/GetScale", ReplyAction="http://tempuri.org/IVolumeMeta/GetScaleResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Scale> GetScaleAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVolumeMetaChannel : AnnotationVizLib.AnnotationService.IVolumeMeta, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VolumeMetaClient : System.ServiceModel.ClientBase<AnnotationVizLib.AnnotationService.IVolumeMeta>, AnnotationVizLib.AnnotationService.IVolumeMeta {
        
        public VolumeMetaClient() {
        }
        
        public VolumeMetaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VolumeMetaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VolumeMetaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VolumeMetaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.Scale GetScale() {
            return base.Channel.GetScale();
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Scale> GetScaleAsync() {
            return base.Channel.GetScaleAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.ICircuit")]
    public interface ICircuit {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getGraph", ReplyAction="http://tempuri.org/ICircuit/getGraphResponse")]
        AnnotationVizLib.AnnotationService.Graphx getGraph(int cellID, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getGraph", ReplyAction="http://tempuri.org/ICircuit/getGraphResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Graphx> getGraphAsync(int cellID, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getStructuresByTypeID", ReplyAction="http://tempuri.org/ICircuit/getStructuresByTypeIDResponse")]
        long[] getStructuresByTypeID(int typeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getStructuresByTypeID", ReplyAction="http://tempuri.org/ICircuit/getStructuresByTypeIDResponse")]
        System.Threading.Tasks.Task<long[]> getStructuresByTypeIDAsync(int typeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getSynapses", ReplyAction="http://tempuri.org/ICircuit/getSynapsesResponse")]
        string[] getSynapses(int cellID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getSynapses", ReplyAction="http://tempuri.org/ICircuit/getSynapsesResponse")]
        System.Threading.Tasks.Task<string[]> getSynapsesAsync(int cellID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getSynapseStats", ReplyAction="http://tempuri.org/ICircuit/getSynapseStatsResponse")]
        AnnotationVizLib.AnnotationService.SynapseObject getSynapseStats();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getSynapseStats", ReplyAction="http://tempuri.org/ICircuit/getSynapseStatsResponse")]
        System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.SynapseObject> getSynapseStatsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getTopConnectedStructures", ReplyAction="http://tempuri.org/ICircuit/getTopConnectedStructuresResponse")]
        string[] getTopConnectedStructures(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getTopConnectedStructures", ReplyAction="http://tempuri.org/ICircuit/getTopConnectedStructuresResponse")]
        System.Threading.Tasks.Task<string[]> getTopConnectedStructuresAsync(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getTopConnectedCells", ReplyAction="http://tempuri.org/ICircuit/getTopConnectedCellsResponse")]
        string[] getTopConnectedCells();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getTopConnectedCells", ReplyAction="http://tempuri.org/ICircuit/getTopConnectedCellsResponse")]
        System.Threading.Tasks.Task<string[]> getTopConnectedCellsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICircuitChannel : AnnotationVizLib.AnnotationService.ICircuit, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CircuitClient : System.ServiceModel.ClientBase<AnnotationVizLib.AnnotationService.ICircuit>, AnnotationVizLib.AnnotationService.ICircuit {
        
        public CircuitClient() {
        }
        
        public CircuitClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CircuitClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CircuitClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CircuitClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.Graphx getGraph(int cellID, int numHops) {
            return base.Channel.getGraph(cellID, numHops);
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.Graphx> getGraphAsync(int cellID, int numHops) {
            return base.Channel.getGraphAsync(cellID, numHops);
        }
        
        public long[] getStructuresByTypeID(int typeID) {
            return base.Channel.getStructuresByTypeID(typeID);
        }
        
        public System.Threading.Tasks.Task<long[]> getStructuresByTypeIDAsync(int typeID) {
            return base.Channel.getStructuresByTypeIDAsync(typeID);
        }
        
        public string[] getSynapses(int cellID) {
            return base.Channel.getSynapses(cellID);
        }
        
        public System.Threading.Tasks.Task<string[]> getSynapsesAsync(int cellID) {
            return base.Channel.getSynapsesAsync(cellID);
        }
        
        public AnnotationVizLib.AnnotationService.SynapseObject getSynapseStats() {
            return base.Channel.getSynapseStats();
        }
        
        public System.Threading.Tasks.Task<AnnotationVizLib.AnnotationService.SynapseObject> getSynapseStatsAsync() {
            return base.Channel.getSynapseStatsAsync();
        }
        
        public string[] getTopConnectedStructures(int num) {
            return base.Channel.getTopConnectedStructures(num);
        }
        
        public System.Threading.Tasks.Task<string[]> getTopConnectedStructuresAsync(int num) {
            return base.Channel.getTopConnectedStructuresAsync(num);
        }
        
        public string[] getTopConnectedCells() {
            return base.Channel.getTopConnectedCells();
        }
        
        public System.Threading.Tasks.Task<string[]> getTopConnectedCellsAsync() {
            return base.Channel.getTopConnectedCellsAsync();
        }
    }
}
