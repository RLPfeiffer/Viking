@model IdentityServer.Models.Group

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>
 

<div>
    <h4>Group</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Id)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Parent)
        </dt>
        <dd>
            @if (Model.ParentID.HasValue)
            {
                @Html.DisplayFor(model => model.Parent.Name)
            }
            else
            {
                @Html.Display("<b>None</b>")
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.NumMemberGroups)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.NumMemberGroups)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.NumMemberUsers)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.NumMemberUsers)
        </dd>
        @if (ViewData.ContainsKey("AccessManagers"))
        {
            <dt>
                Access Managers
            </dt>
            <dd>
                <ul class="no-bullets">
                    @for (int i = 0; i < ViewBag.AccessManagers.Count; i++)
                    {
                    <li>
                        @ViewBag.AccessManagers[i]
                    </li>
                    }
                </ul>
                
            </dd>
        }
        <dd>
            <table class="edit-settings">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => Model.MemberOf)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.MemberUsers)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.MemberGroups)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.GroupsWithPermissions)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => Model.UsersWithPermissions)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <ul>
                                @for (int i = 0; i < Model.MemberOf.Count(); i++)
                                {
                                    <li>
                                        @Html.DisplayFor(x => Model.MemberOf.ElementAt(i).Name)
                                    </li>

                                }
                            </ul>
                        </td>
                        <td>
                            <ul>
                                @for (int i = 0; i < Model.Users.Count(); i++)
                                {

                                    <li>
                                        @Html.DisplayFor(x => Model.Users.ElementAt(i).UserName)
                                    </li>

                                }
                            </ul>
                        </td>
                        <td>
                            <ul>
                                @for (int i = 0; i < Model.Groups.Count(); i++)
                                {

                                    <li>
                                        @Html.DisplayFor(x => Model.Groups.ElementAt(i).Name)
                                    </li>

                                }
                            </ul>
                        </td>
                        <td>
                            <!--<a asp-action="Create" asp-controller="GrantedGroupPermissions" asp-route-ResourceId="@Model.Id">Add Permission</a>-->
                            <ul>
                                @for (int i = 0; i < Model.GroupsWithPermissions.Count(); i++)
                                {
                                    <li>
                                        @Html.DisplayFor(x => Model.GroupsWithPermissions.ElementAt(i).PermittedGroup.Name) - @Html.DisplayFor(x => Model.GroupsWithPermissions.ElementAt(i).PermissionId)
                                    </li>
                                }
                            </ul>
                        </td>
                        <td>
                            <!--<a asp-action="Create" asp-controller="GrantedUserPermissions" asp-route-ResourceId="@Model.Id">Add Permission</a>-->
                            <ul>
                                @for (int i = 0; i < Model.UsersWithPermissions.Count(); i++)
                                {
                                    <li>
                                        @Html.DisplayFor(x => Model.UsersWithPermissions.ElementAt(i).PermittedUser.UserName) - @Html.DisplayFor(x => Model.UsersWithPermissions.ElementAt(i).PermissionId)
                                    </li>

                                }
                            </ul>
                        </td>
                    </tr>
                </tbody>
            </table>
        </dd>
    </dl> 
</div>
<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, Operations.GroupAccessManager)).Succeeded)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a><text> | </text>
    }
<a asp-action="Index">Back to List</a>
</div>
