// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace Viking.DataModel.Annotation
{
    [Table("Structure")]
    [Index(nameof(ParentId), nameof(Id), Name = "Structure_ParentID_ID")]
    public partial class Structure
    {
        public Structure()
        {
            InverseParent = new HashSet<Structure>();
            Locations = new HashSet<Location>();
        }

        [Key]
        [Column("ID")]
        public long Id { get; set; }
        [Column("TypeID")]
        public long TypeId { get; set; }
        public string Notes { get; set; }
        public bool Verified { get; set; }
        /// <summary>
        /// Strings seperated by semicolins
        /// </summary>
        [Column(TypeName = "xml")]
        public string Tags { get; set; }
        /// <summary>
        /// How certain is it that the structure is what we say it is
        /// </summary>
        public double Confidence { get; set; }
        /// <summary>
        /// Records last write time
        /// </summary>
        [Required]
        public byte[] Version { get; set; }
        /// <summary>
        /// If the structure is contained in a larger structure (Synapse for a cell) this index contains the index of the parent
        /// </summary>
        [Column("ParentID")]
        public long? ParentId { get; set; }
        /// <summary>
        /// Date the structure was created
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime Created { get; set; }
        /// <summary>
        /// Additional Label for structure in UI
        /// </summary>
        [StringLength(64)]
        public string Label { get; set; }
        /// <summary>
        /// Last username to modify the row
        /// </summary>
        [Required]
        [StringLength(254)]
        public string Username { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime LastModified { get; set; }

        [ForeignKey(nameof(ParentId))]
        [InverseProperty(nameof(Structure.InverseParent))]
        public virtual Structure Parent { get; set; }
        [ForeignKey(nameof(TypeId))]
        [InverseProperty(nameof(StructureType.Structures))]
        public virtual StructureType Type { get; set; }
        [InverseProperty("IdNavigation")]
        public virtual StructureSpatialCache StructureSpatialCache { get; set; }
        [InverseProperty(nameof(Structure.Parent))]
        public virtual ICollection<Structure> InverseParent { get; set; }
        [InverseProperty(nameof(Location.Parent))]
        public virtual ICollection<Location> Locations { get; set; }
    }
}