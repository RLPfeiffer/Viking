// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace Viking.DataModel.Annotation
{
    [Table("StructureType")]
    public partial class StructureType
    {
        public StructureType()
        {
            InverseParent = new HashSet<StructureType>();
            PermittedStructureLinkSourceTypes = new HashSet<PermittedStructureLink>();
            PermittedStructureLinkTargetTypes = new HashSet<PermittedStructureLink>();
            StructureTemplates = new HashSet<StructureTemplate>();
            Structures = new HashSet<Structure>();
        }

        [Key]
        [Column("ID")]
        public long Id { get; set; }
        [Column("ParentID")]
        public long? ParentId { get; set; }
        [Required]
        [StringLength(128)]
        public string Name { get; set; }
        public string Notes { get; set; }
        /// <summary>
        /// Point,Line,Poly
        /// </summary>
        [Required]
        [StringLength(16)]
        public string MarkupType { get; set; }
        /// <summary>
        /// Strings seperated by semicolins
        /// </summary>
        [Column(TypeName = "xml")]
        public string Tags { get; set; }
        [Column(TypeName = "xml")]
        public string StructureTags { get; set; }
        public bool Abstract { get; set; }
        public int Color { get; set; }
        [Required]
        public byte[] Version { get; set; }
        /// <summary>
        /// Code used to identify these items in the UI
        /// </summary>
        [Required]
        [StringLength(16)]
        public string Code { get; set; }

        /// <summary>
        /// Hotkey used to create a structure of this type
        /// </summary>
        [Required]
        [StringLength(1)]
        public string HotKey { get; set; } = null;
        /// <summary>
        /// Last username to modify the row
        /// </summary>
        [Required]
        [StringLength(254)]
        public string Username { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime LastModified { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime Created { get; set; }

        [ForeignKey(nameof(ParentId))]
        [InverseProperty(nameof(StructureType.InverseParent))]
        public virtual StructureType Parent { get; set; }
        [InverseProperty(nameof(StructureType.Parent))]
        public virtual ICollection<StructureType> InverseParent { get; set; }
        [InverseProperty(nameof(PermittedStructureLink.SourceType))]
        public virtual ICollection<PermittedStructureLink> PermittedStructureLinkSourceTypes { get; set; }
        [InverseProperty(nameof(PermittedStructureLink.TargetType))]
        public virtual ICollection<PermittedStructureLink> PermittedStructureLinkTargetTypes { get; set; }
        [InverseProperty(nameof(StructureTemplate.StructureType))]
        public virtual ICollection<StructureTemplate> StructureTemplates { get; set; }
        [InverseProperty(nameof(Structure.Type))]
        public virtual ICollection<Structure> Structures { get; set; }
    }
}