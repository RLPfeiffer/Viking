//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConnectomeODataV4.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ConnectomeEntities : DbContext
    {
        public ConnectomeEntities()
            : base("name=ConnectomeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DeletedLocation> DeletedLocations { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<LocationLink> LocationLinks { get; set; }
        public virtual DbSet<Structure> Structures { get; set; }
        public virtual DbSet<StructureType> StructureTypes { get; set; }
        public virtual DbSet<StructureLink> StructureLinks { get; set; }
    
        public virtual ObjectResult<ApproximateStructureLocation_Result> ApproximateStructureLocation(Nullable<int> structureID)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApproximateStructureLocation_Result>("ApproximateStructureLocation", structureIDParameter);
        }
    
        public virtual ObjectResult<ApproximateStructureLocations_Result> ApproximateStructureLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApproximateStructureLocations_Result>("ApproximateStructureLocations");
        }
    
        public virtual ObjectResult<CountChildStructuresByType_Result> CountChildStructuresByType(Nullable<long> structureID)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CountChildStructuresByType_Result>("CountChildStructuresByType", structureIDParameter);
        }
    
        public virtual ObjectResult<SelectAllStructureLocationLinks_Result> SelectAllStructureLocationLinks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllStructureLocationLinks_Result>("SelectAllStructureLocationLinks");
        }
    
        public virtual ObjectResult<SelectAllStructureLocations_Result> SelectAllStructureLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllStructureLocations_Result>("SelectAllStructureLocations");
        }
    
        public virtual ObjectResult<SelectAllStructures_Result> SelectAllStructures()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllStructures_Result>("SelectAllStructures");
        }
    
        public virtual ObjectResult<SelectChildrenStructureLinks_Result> SelectChildrenStructureLinks(Nullable<long> structureID)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectChildrenStructureLinks_Result>("SelectChildrenStructureLinks", structureIDParameter);
        }
    
        public virtual ObjectResult<SelectLastModifiedLocationByUsers_Result> SelectLastModifiedLocationByUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectLastModifiedLocationByUsers_Result>("SelectLastModifiedLocationByUsers");
        }
    
        public virtual ObjectResult<SelectNumConnectionsPerStructure_Result> SelectNumConnectionsPerStructure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectNumConnectionsPerStructure_Result>("SelectNumConnectionsPerStructure");
        }
    
        public virtual ObjectResult<Structure> SelectRootStructures()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Structure>("SelectRootStructures");
        }
    
        public virtual ObjectResult<Structure> SelectRootStructures(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Structure>("SelectRootStructures", mergeOption);
        }
    
        public virtual ObjectResult<LocationLink> SelectSectionLocationLinks(Nullable<double> z, Nullable<System.DateTime> queryDate)
        {
            var zParameter = z.HasValue ?
                new ObjectParameter("Z", z) :
                new ObjectParameter("Z", typeof(double));
    
            var queryDateParameter = queryDate.HasValue ?
                new ObjectParameter("QueryDate", queryDate) :
                new ObjectParameter("QueryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LocationLink>("SelectSectionLocationLinks", zParameter, queryDateParameter);
        }
    
        public virtual ObjectResult<LocationLink> SelectSectionLocationLinks(Nullable<double> z, Nullable<System.DateTime> queryDate, MergeOption mergeOption)
        {
            var zParameter = z.HasValue ?
                new ObjectParameter("Z", z) :
                new ObjectParameter("Z", typeof(double));
    
            var queryDateParameter = queryDate.HasValue ?
                new ObjectParameter("QueryDate", queryDate) :
                new ObjectParameter("QueryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LocationLink>("SelectSectionLocationLinks", mergeOption, zParameter, queryDateParameter);
        }
    
        public virtual ObjectResult<SelectSectionLocationsAndLinks_Result> SelectSectionLocationsAndLinks(Nullable<double> z, Nullable<System.DateTime> queryDate)
        {
            var zParameter = z.HasValue ?
                new ObjectParameter("Z", z) :
                new ObjectParameter("Z", typeof(double));
    
            var queryDateParameter = queryDate.HasValue ?
                new ObjectParameter("QueryDate", queryDate) :
                new ObjectParameter("QueryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectSectionLocationsAndLinks_Result>("SelectSectionLocationsAndLinks", zParameter, queryDateParameter);
        }
    
        public virtual ObjectResult<Structure> SelectStructure(Nullable<long> structureID)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Structure>("SelectStructure", structureIDParameter);
        }
    
        public virtual ObjectResult<Structure> SelectStructure(Nullable<long> structureID, MergeOption mergeOption)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Structure>("SelectStructure", mergeOption, structureIDParameter);
        }
    
        public virtual ObjectResult<SelectStructureChangeLog_Result> SelectStructureChangeLog(Nullable<long> structure_ID, Nullable<System.DateTime> begin_time, Nullable<System.DateTime> end_time)
        {
            var structure_IDParameter = structure_ID.HasValue ?
                new ObjectParameter("structure_ID", structure_ID) :
                new ObjectParameter("structure_ID", typeof(long));
    
            var begin_timeParameter = begin_time.HasValue ?
                new ObjectParameter("begin_time", begin_time) :
                new ObjectParameter("begin_time", typeof(System.DateTime));
    
            var end_timeParameter = end_time.HasValue ?
                new ObjectParameter("end_time", end_time) :
                new ObjectParameter("end_time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStructureChangeLog_Result>("SelectStructureChangeLog", structure_IDParameter, begin_timeParameter, end_timeParameter);
        }
    
        public virtual ObjectResult<SelectStructureLabels_Result> SelectStructureLabels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStructureLabels_Result>("SelectStructureLabels");
        }
    
        public virtual ObjectResult<SelectStructureLocationChangeLog_Result> SelectStructureLocationChangeLog(Nullable<long> structure_ID, Nullable<System.DateTime> begin_time, Nullable<System.DateTime> end_time)
        {
            var structure_IDParameter = structure_ID.HasValue ?
                new ObjectParameter("structure_ID", structure_ID) :
                new ObjectParameter("structure_ID", typeof(long));
    
            var begin_timeParameter = begin_time.HasValue ?
                new ObjectParameter("begin_time", begin_time) :
                new ObjectParameter("begin_time", typeof(System.DateTime));
    
            var end_timeParameter = end_time.HasValue ?
                new ObjectParameter("end_time", end_time) :
                new ObjectParameter("end_time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStructureLocationChangeLog_Result>("SelectStructureLocationChangeLog", structure_IDParameter, begin_timeParameter, end_timeParameter);
        }
    
        public virtual ObjectResult<SelectStructureLocationLinks_Result> SelectStructureLocationLinks(Nullable<long> structureID)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStructureLocationLinks_Result>("SelectStructureLocationLinks", structureIDParameter);
        }
    
        public virtual ObjectResult<SelectStructureLocationLinksNoChildren_Result> SelectStructureLocationLinksNoChildren(Nullable<long> structureID)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStructureLocationLinksNoChildren_Result>("SelectStructureLocationLinksNoChildren", structureIDParameter);
        }
    
        public virtual ObjectResult<SelectStructureLocations_Result> SelectStructureLocations(Nullable<long> structureID)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStructureLocations_Result>("SelectStructureLocations", structureIDParameter);
        }
    
        public virtual ObjectResult<SelectStructuresAndLinks_Result> SelectStructuresAndLinks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStructuresAndLinks_Result>("SelectStructuresAndLinks");
        }
    
        public virtual ObjectResult<SelectStructuresForSection_Result> SelectStructuresForSection(Nullable<double> z, Nullable<System.DateTime> queryDate)
        {
            var zParameter = z.HasValue ?
                new ObjectParameter("Z", z) :
                new ObjectParameter("Z", typeof(double));
    
            var queryDateParameter = queryDate.HasValue ?
                new ObjectParameter("QueryDate", queryDate) :
                new ObjectParameter("QueryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStructuresForSection_Result>("SelectStructuresForSection", zParameter, queryDateParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> SelectUnfinishedStructureBranches(Nullable<long> structureID)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("SelectUnfinishedStructureBranches", structureIDParameter);
        }
    
        public virtual ObjectResult<SelectUnfinishedStructureBranchesWithPosition_Result> SelectUnfinishedStructureBranchesWithPosition(Nullable<long> structureID)
        {
            var structureIDParameter = structureID.HasValue ?
                new ObjectParameter("StructureID", structureID) :
                new ObjectParameter("StructureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUnfinishedStructureBranchesWithPosition_Result>("SelectUnfinishedStructureBranchesWithPosition", structureIDParameter);
        }
    
        [DbFunction("ConnectomeEntities", "SectionLocationLinks")]
        public virtual IQueryable<LocationLink> SectionLocationLinks(Nullable<double> z)
        {
            var zParameter = z.HasValue ?
                new ObjectParameter("Z", z) :
                new ObjectParameter("Z", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LocationLink>("[ConnectomeEntities].[SectionLocationLinks](@Z)", zParameter);
        }
    
        [DbFunction("ConnectomeEntities", "SectionLocationLinksModifiedAfterDate")]
        public virtual IQueryable<LocationLink> SectionLocationLinksModifiedAfterDate(Nullable<double> z, Nullable<System.DateTime> queryDate)
        {
            var zParameter = z.HasValue ?
                new ObjectParameter("Z", z) :
                new ObjectParameter("Z", typeof(double));
    
            var queryDateParameter = queryDate.HasValue ?
                new ObjectParameter("QueryDate", queryDate) :
                new ObjectParameter("QueryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LocationLink>("[ConnectomeEntities].[SectionLocationLinksModifiedAfterDate](@Z, @QueryDate)", zParameter, queryDateParameter);
        }
    
        [DbFunction("ConnectomeEntities", "SectionLocations")]
        public virtual IQueryable<Location> SectionLocations(Nullable<double> z)
        {
            var zParameter = z.HasValue ?
                new ObjectParameter("Z", z) :
                new ObjectParameter("Z", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Location>("[ConnectomeEntities].[SectionLocations](@Z)", zParameter);
        }
    
        [DbFunction("ConnectomeEntities", "SectionLocationsModifiedAfterDate")]
        public virtual IQueryable<Location> SectionLocationsModifiedAfterDate(Nullable<double> z, Nullable<System.DateTime> queryDate)
        {
            var zParameter = z.HasValue ?
                new ObjectParameter("Z", z) :
                new ObjectParameter("Z", typeof(double));
    
            var queryDateParameter = queryDate.HasValue ?
                new ObjectParameter("QueryDate", queryDate) :
                new ObjectParameter("QueryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Location>("[ConnectomeEntities].[SectionLocationsModifiedAfterDate](@Z, @QueryDate)", zParameter, queryDateParameter);
        }
    }
}
