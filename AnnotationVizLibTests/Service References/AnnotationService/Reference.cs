//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnnotationVizLibTests.AnnotationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbGeometry", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Entity.Spatial")]
    [System.SerializableAttribute()]
    public partial class DbGeometry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AnnotationVizLibTests.AnnotationService.DbGeometryWellKnownValue GeometryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AnnotationVizLibTests.AnnotationService.DbGeometryWellKnownValue Geometry {
            get {
                return this.GeometryField;
            }
            set {
                if ((object.ReferenceEquals(this.GeometryField, value) != true)) {
                    this.GeometryField = value;
                    this.RaisePropertyChanged("Geometry");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbGeometryWellKnownValue", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Entity.Spatial")]
    [System.SerializableAttribute()]
    public partial class DbGeometryWellKnownValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoordinateSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WellKnownTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] WellKnownBinaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int CoordinateSystemId {
            get {
                return this.CoordinateSystemIdField;
            }
            set {
                if ((this.CoordinateSystemIdField.Equals(value) != true)) {
                    this.CoordinateSystemIdField = value;
                    this.RaisePropertyChanged("CoordinateSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string WellKnownText {
            get {
                return this.WellKnownTextField;
            }
            set {
                if ((object.ReferenceEquals(this.WellKnownTextField, value) != true)) {
                    this.WellKnownTextField = value;
                    this.RaisePropertyChanged("WellKnownText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] WellKnownBinary {
            get {
                return this.WellKnownBinaryField;
            }
            set {
                if ((object.ReferenceEquals(this.WellKnownBinaryField, value) != true)) {
                    this.WellKnownBinaryField = value;
                    this.RaisePropertyChanged("WellKnownBinary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.IAnnotateStructureTypes")]
    public interface IAnnotateStructureTypes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/CreateStructureType", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/CreateStructureTypeResponse")]
        AnnotationVizLib.AnnotationService.StructureType CreateStructureType(AnnotationVizLib.AnnotationService.StructureType obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypes", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypesResponse")]
        AnnotationVizLib.AnnotationService.StructureType[] GetStructureTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypeByID", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypeByIDResponse")]
        AnnotationVizLib.AnnotationService.StructureType GetStructureTypeByID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypesByIDs", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/GetStructureTypesByIDsResponse")]
        AnnotationVizLib.AnnotationService.StructureType[] GetStructureTypesByIDs(long[] IDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/UpdateStructureTypes", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/UpdateStructureTypesResponse")]
        long[] UpdateStructureTypes(AnnotationVizLib.AnnotationService.StructureType[] structType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/CreatePermittedStructureLink", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/CreatePermittedStructureLinkResponse")]
        AnnotationVizLib.AnnotationService.PermittedStructureLink CreatePermittedStructureLink(AnnotationVizLib.AnnotationService.PermittedStructureLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/UpdatePermittedStructureLinks", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/UpdatePermittedStructureLinksResponse")]
        void UpdatePermittedStructureLinks(AnnotationVizLib.AnnotationService.PermittedStructureLink[] permittedStructureLinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructureTypes/TestMethod", ReplyAction="http://tempuri.org/IAnnotateStructureTypes/TestMethodResponse")]
        string TestMethod();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnnotateStructureTypesChannel : AnnotationVizLibTests.AnnotationService.IAnnotateStructureTypes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnnotateStructureTypesClient : System.ServiceModel.ClientBase<AnnotationVizLibTests.AnnotationService.IAnnotateStructureTypes>, AnnotationVizLibTests.AnnotationService.IAnnotateStructureTypes {
        
        public AnnotateStructureTypesClient() {
        }
        
        public AnnotateStructureTypesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnnotateStructureTypesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateStructureTypesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateStructureTypesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.StructureType CreateStructureType(AnnotationVizLib.AnnotationService.StructureType obj) {
            return base.Channel.CreateStructureType(obj);
        }
        
        public AnnotationVizLib.AnnotationService.StructureType[] GetStructureTypes() {
            return base.Channel.GetStructureTypes();
        }
        
        public AnnotationVizLib.AnnotationService.StructureType GetStructureTypeByID(long ID) {
            return base.Channel.GetStructureTypeByID(ID);
        }
        
        public AnnotationVizLib.AnnotationService.StructureType[] GetStructureTypesByIDs(long[] IDs) {
            return base.Channel.GetStructureTypesByIDs(IDs);
        }
        
        public long[] UpdateStructureTypes(AnnotationVizLib.AnnotationService.StructureType[] structType) {
            return base.Channel.UpdateStructureTypes(structType);
        }
        
        public AnnotationVizLib.AnnotationService.PermittedStructureLink CreatePermittedStructureLink(AnnotationVizLib.AnnotationService.PermittedStructureLink link) {
            return base.Channel.CreatePermittedStructureLink(link);
        }
        
        public void UpdatePermittedStructureLinks(AnnotationVizLib.AnnotationService.PermittedStructureLink[] permittedStructureLinks) {
            base.Channel.UpdatePermittedStructureLinks(permittedStructureLinks);
        }
        
        public string TestMethod() {
            return base.Channel.TestMethod();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.IAnnotateStructures")]
    public interface IAnnotateStructures {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/CreateStructure", ReplyAction="http://tempuri.org/IAnnotateStructures/CreateStructureResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationHistory))]
        AnnotationVizLib.AnnotationService.CreateStructureRetval CreateStructure(AnnotationVizLib.AnnotationService.Structure structure, AnnotationVizLib.AnnotationService.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresResponse")]
        AnnotationVizLib.AnnotationService.Structure[] GetStructures();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresForSection", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionResponse")]
        AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSection(out long QueryExecutedTime, out long[] DeletedIDs, long Section, long ModifiedAfterThisTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInMosaicRegionRespo" +
            "nse")]
        AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInMosaicRegion(out long QueryExecutedTime, out long[] DeletedIDs, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInVolumeRegion", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresForSectionInVolumeRegionRespo" +
            "nse")]
        AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInVolumeRegion(out long QueryExecutedTime, out long[] DeletedIDs, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructureByID", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructureByIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.StructureHistory))]
        AnnotationVizLib.AnnotationService.Structure GetStructureByID(long ID, bool IncludeChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresByIDs", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresByIDsResponse")]
        AnnotationVizLib.AnnotationService.Structure[] GetStructuresByIDs(long[] ID, bool IncludeChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/CreateStructureLink", ReplyAction="http://tempuri.org/IAnnotateStructures/CreateStructureLinkResponse")]
        AnnotationVizLib.AnnotationService.StructureLink CreateStructureLink(AnnotationVizLib.AnnotationService.StructureLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetLinkedStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/GetLinkedStructuresResponse")]
        AnnotationVizLib.AnnotationService.StructureLink[] GetLinkedStructures();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetLinkedStructuresByID", ReplyAction="http://tempuri.org/IAnnotateStructures/GetLinkedStructuresByIDResponse")]
        AnnotationVizLib.AnnotationService.StructureLink[] GetLinkedStructuresByID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetNetworkedStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/GetNetworkedStructuresResponse")]
        long[] GetNetworkedStructures(long[] IDs, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetChildStructuresInNetwork", ReplyAction="http://tempuri.org/IAnnotateStructures/GetChildStructuresInNetworkResponse")]
        AnnotationVizLib.AnnotationService.Structure[] GetChildStructuresInNetwork(long[] IDs, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructureLinksInNetwork", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructureLinksInNetworkResponse")]
        AnnotationVizLib.AnnotationService.StructureLink[] GetStructureLinksInNetwork(long[] IDs, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/NumberOfLocationsForStructure", ReplyAction="http://tempuri.org/IAnnotateStructures/NumberOfLocationsForStructureResponse")]
        long NumberOfLocationsForStructure(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/UpdateStructures", ReplyAction="http://tempuri.org/IAnnotateStructures/UpdateStructuresResponse")]
        long[] UpdateStructures(AnnotationVizLib.AnnotationService.Structure[] structure);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/UpdateStructureLinks", ReplyAction="http://tempuri.org/IAnnotateStructures/UpdateStructureLinksResponse")]
        void UpdateStructureLinks(AnnotationVizLib.AnnotationService.StructureLink[] structureLinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocations", ReplyAction="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocationsResponse")]
        long[] GetUnfinishedLocations(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocationsWithPosition", ReplyAction="http://tempuri.org/IAnnotateStructures/GetUnfinishedLocationsWithPositionResponse" +
            "")]
        AnnotationVizLib.AnnotationService.LocationPositionOnly[] GetUnfinishedLocationsWithPosition(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructuresOfType", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructuresOfTypeResponse")]
        AnnotationVizLib.AnnotationService.Structure[] GetStructuresOfType(long typeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/Merge", ReplyAction="http://tempuri.org/IAnnotateStructures/MergeResponse")]
        long Merge(long KeepID, long MergeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/Split", ReplyAction="http://tempuri.org/IAnnotateStructures/SplitResponse")]
        long Split(long StructureA, AnnotationVizLib.AnnotationService.LocationLink locLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateStructures/GetStructureChangeLog", ReplyAction="http://tempuri.org/IAnnotateStructures/GetStructureChangeLogResponse")]
        AnnotationVizLib.AnnotationService.StructureHistory[] GetStructureChangeLog(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnnotateStructuresChannel : AnnotationVizLibTests.AnnotationService.IAnnotateStructures, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnnotateStructuresClient : System.ServiceModel.ClientBase<AnnotationVizLibTests.AnnotationService.IAnnotateStructures>, AnnotationVizLibTests.AnnotationService.IAnnotateStructures {
        
        public AnnotateStructuresClient() {
        }
        
        public AnnotateStructuresClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnnotateStructuresClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateStructuresClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateStructuresClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.CreateStructureRetval CreateStructure(AnnotationVizLib.AnnotationService.Structure structure, AnnotationVizLib.AnnotationService.Location location) {
            return base.Channel.CreateStructure(structure, location);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructures() {
            return base.Channel.GetStructures();
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSection(out long QueryExecutedTime, out long[] DeletedIDs, long Section, long ModifiedAfterThisTime) {
            return base.Channel.GetStructuresForSection(out QueryExecutedTime, out DeletedIDs, Section, ModifiedAfterThisTime);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInMosaicRegion(out long QueryExecutedTime, out long[] DeletedIDs, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisTime) {
            return base.Channel.GetStructuresForSectionInMosaicRegion(out QueryExecutedTime, out DeletedIDs, section, bbox, MinRadius, ModifiedAfterThisTime);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresForSectionInVolumeRegion(out long QueryExecutedTime, out long[] DeletedIDs, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisTime) {
            return base.Channel.GetStructuresForSectionInVolumeRegion(out QueryExecutedTime, out DeletedIDs, section, bbox, MinRadius, ModifiedAfterThisTime);
        }
        
        public AnnotationVizLib.AnnotationService.Structure GetStructureByID(long ID, bool IncludeChildren) {
            return base.Channel.GetStructureByID(ID, IncludeChildren);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresByIDs(long[] ID, bool IncludeChildren) {
            return base.Channel.GetStructuresByIDs(ID, IncludeChildren);
        }
        
        public AnnotationVizLib.AnnotationService.StructureLink CreateStructureLink(AnnotationVizLib.AnnotationService.StructureLink link) {
            return base.Channel.CreateStructureLink(link);
        }
        
        public AnnotationVizLib.AnnotationService.StructureLink[] GetLinkedStructures() {
            return base.Channel.GetLinkedStructures();
        }
        
        public AnnotationVizLib.AnnotationService.StructureLink[] GetLinkedStructuresByID(long ID) {
            return base.Channel.GetLinkedStructuresByID(ID);
        }
        
        public long[] GetNetworkedStructures(long[] IDs, int numHops) {
            return base.Channel.GetNetworkedStructures(IDs, numHops);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetChildStructuresInNetwork(long[] IDs, int numHops) {
            return base.Channel.GetChildStructuresInNetwork(IDs, numHops);
        }
        
        public AnnotationVizLib.AnnotationService.StructureLink[] GetStructureLinksInNetwork(long[] IDs, int numHops) {
            return base.Channel.GetStructureLinksInNetwork(IDs, numHops);
        }
        
        public long NumberOfLocationsForStructure(long structureID) {
            return base.Channel.NumberOfLocationsForStructure(structureID);
        }
        
        public long[] UpdateStructures(AnnotationVizLib.AnnotationService.Structure[] structure) {
            return base.Channel.UpdateStructures(structure);
        }
        
        public void UpdateStructureLinks(AnnotationVizLib.AnnotationService.StructureLink[] structureLinks) {
            base.Channel.UpdateStructureLinks(structureLinks);
        }
        
        public long[] GetUnfinishedLocations(long structureID) {
            return base.Channel.GetUnfinishedLocations(structureID);
        }
        
        public AnnotationVizLib.AnnotationService.LocationPositionOnly[] GetUnfinishedLocationsWithPosition(long structureID) {
            return base.Channel.GetUnfinishedLocationsWithPosition(structureID);
        }
        
        public AnnotationVizLib.AnnotationService.Structure[] GetStructuresOfType(long typeID) {
            return base.Channel.GetStructuresOfType(typeID);
        }
        
        public long Merge(long KeepID, long MergeID) {
            return base.Channel.Merge(KeepID, MergeID);
        }
        
        public long Split(long StructureA, AnnotationVizLib.AnnotationService.LocationLink locLink) {
            return base.Channel.Split(StructureA, locLink);
        }
        
        public AnnotationVizLib.AnnotationService.StructureHistory[] GetStructureChangeLog(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time) {
            return base.Channel.GetStructureChangeLog(structure_id, begin_time, end_time);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.IAnnotateLocations")]
    public interface IAnnotateLocations {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/CreateLocation", ReplyAction="http://tempuri.org/IAnnotateLocations/CreateLocationResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationHistory))]
        AnnotationVizLib.AnnotationService.Location CreateLocation(AnnotationVizLib.AnnotationService.Location obj, long[] LinkedIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationByID", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationByIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationHistory))]
        AnnotationVizLib.AnnotationService.Location GetLocationByID(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationsByID", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationsByIDResponse")]
        AnnotationVizLib.AnnotationService.Location[] GetLocationsByID(long[] IDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLastModifiedLocation", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLastModifiedLocationResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AnnotationVizLib.AnnotationService.LocationHistory))]
        AnnotationVizLib.AnnotationService.Location GetLastModifiedLocation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLinkedLocations", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLinkedLocationsResponse")]
        long[] GetLinkedLocations(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationsForSection", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationsForSectionResponse")]
        AnnotationVizLib.AnnotationService.Location[] GetLocationsForSection(out long QueryExecutedTime, long section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationsForStructure", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationsForStructureResponse")]
        AnnotationVizLib.AnnotationService.Location[] GetLocationsForStructure(long structureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationChangesInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationChangesInMosaicRegionResponse")]
        AnnotationVizLib.AnnotationService.Location[] GetLocationChangesInMosaicRegion(out long QueryExecutedTime, out long[] DeletedIDs, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, System.Nullable<long> ModifiedAfterThisUtcTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetAnnotationsInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateLocations/GetAnnotationsInMosaicRegionResponse")]
        AnnotationVizLib.AnnotationService.AnnotationSet GetAnnotationsInMosaicRegion(out long QueryExecutedTime, out long[] DeletedIDs, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, System.Nullable<long> ModifiedAfterThisUtcTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationChanges", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationChangesResponse")]
        AnnotationVizLib.AnnotationService.Location[] GetLocationChanges(out long QueryExecutedTime, out long[] DeletedIDs, long section, long ModifiedAfterThisUtcTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/Update", ReplyAction="http://tempuri.org/IAnnotateLocations/UpdateResponse")]
        long[] Update(AnnotationVizLib.AnnotationService.Location[] locations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/CreateLocationLink", ReplyAction="http://tempuri.org/IAnnotateLocations/CreateLocationLinkResponse")]
        void CreateLocationLink(long SourceID, long TargetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/DeleteLocationLink", ReplyAction="http://tempuri.org/IAnnotateLocations/DeleteLocationLinkResponse")]
        void DeleteLocationLink(long SourceID, long TargetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSection", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSectionResponse")]
        AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSection(out long QueryExecutedTime, out AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks, long section, long ModifiedAfterThisTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSectionInMosaicRegion", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationLinksForSectionInMosaicRegionRes" +
            "ponse")]
        AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSectionInMosaicRegion(out long QueryExecutedTime, out AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisUtcTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnnotateLocations/GetLocationChangeLog", ReplyAction="http://tempuri.org/IAnnotateLocations/GetLocationChangeLogResponse")]
        AnnotationVizLib.AnnotationService.LocationHistory[] GetLocationChangeLog(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnnotateLocationsChannel : AnnotationVizLibTests.AnnotationService.IAnnotateLocations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnnotateLocationsClient : System.ServiceModel.ClientBase<AnnotationVizLibTests.AnnotationService.IAnnotateLocations>, AnnotationVizLibTests.AnnotationService.IAnnotateLocations {
        
        public AnnotateLocationsClient() {
        }
        
        public AnnotateLocationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnnotateLocationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateLocationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnnotateLocationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.Location CreateLocation(AnnotationVizLib.AnnotationService.Location obj, long[] LinkedIDs) {
            return base.Channel.CreateLocation(obj, LinkedIDs);
        }
        
        public AnnotationVizLib.AnnotationService.Location GetLocationByID(long ID) {
            return base.Channel.GetLocationByID(ID);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationsByID(long[] IDs) {
            return base.Channel.GetLocationsByID(IDs);
        }
        
        public AnnotationVizLib.AnnotationService.Location GetLastModifiedLocation() {
            return base.Channel.GetLastModifiedLocation();
        }
        
        public long[] GetLinkedLocations(long ID) {
            return base.Channel.GetLinkedLocations(ID);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationsForSection(out long QueryExecutedTime, long section) {
            return base.Channel.GetLocationsForSection(out QueryExecutedTime, section);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationsForStructure(long structureID) {
            return base.Channel.GetLocationsForStructure(structureID);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationChangesInMosaicRegion(out long QueryExecutedTime, out long[] DeletedIDs, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, System.Nullable<long> ModifiedAfterThisUtcTime) {
            return base.Channel.GetLocationChangesInMosaicRegion(out QueryExecutedTime, out DeletedIDs, section, bbox, MinRadius, ModifiedAfterThisUtcTime);
        }
        
        public AnnotationVizLib.AnnotationService.AnnotationSet GetAnnotationsInMosaicRegion(out long QueryExecutedTime, out long[] DeletedIDs, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, System.Nullable<long> ModifiedAfterThisUtcTime) {
            return base.Channel.GetAnnotationsInMosaicRegion(out QueryExecutedTime, out DeletedIDs, section, bbox, MinRadius, ModifiedAfterThisUtcTime);
        }
        
        public AnnotationVizLib.AnnotationService.Location[] GetLocationChanges(out long QueryExecutedTime, out long[] DeletedIDs, long section, long ModifiedAfterThisUtcTime) {
            return base.Channel.GetLocationChanges(out QueryExecutedTime, out DeletedIDs, section, ModifiedAfterThisUtcTime);
        }
        
        public long[] Update(AnnotationVizLib.AnnotationService.Location[] locations) {
            return base.Channel.Update(locations);
        }
        
        public void CreateLocationLink(long SourceID, long TargetID) {
            base.Channel.CreateLocationLink(SourceID, TargetID);
        }
        
        public void DeleteLocationLink(long SourceID, long TargetID) {
            base.Channel.DeleteLocationLink(SourceID, TargetID);
        }
        
        public AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSection(out long QueryExecutedTime, out AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks, long section, long ModifiedAfterThisTime) {
            return base.Channel.GetLocationLinksForSection(out QueryExecutedTime, out DeletedLinks, section, ModifiedAfterThisTime);
        }
        
        public AnnotationVizLib.AnnotationService.LocationLink[] GetLocationLinksForSectionInMosaicRegion(out long QueryExecutedTime, out AnnotationVizLib.AnnotationService.LocationLink[] DeletedLinks, long section, AnnotationVizLib.AnnotationService.BoundingRectangle bbox, double MinRadius, long ModifiedAfterThisUtcTime) {
            return base.Channel.GetLocationLinksForSectionInMosaicRegion(out QueryExecutedTime, out DeletedLinks, section, bbox, MinRadius, ModifiedAfterThisUtcTime);
        }
        
        public AnnotationVizLib.AnnotationService.LocationHistory[] GetLocationChangeLog(System.Nullable<long> structure_id, System.Nullable<System.DateTime> begin_time, System.Nullable<System.DateTime> end_time) {
            return base.Channel.GetLocationChangeLog(structure_id, begin_time, end_time);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.IVolumeMeta")]
    public interface IVolumeMeta {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVolumeMeta/GetScale", ReplyAction="http://tempuri.org/IVolumeMeta/GetScaleResponse")]
        AnnotationVizLib.AnnotationService.Scale GetScale();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVolumeMetaChannel : AnnotationVizLibTests.AnnotationService.IVolumeMeta, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VolumeMetaClient : System.ServiceModel.ClientBase<AnnotationVizLibTests.AnnotationService.IVolumeMeta>, AnnotationVizLibTests.AnnotationService.IVolumeMeta {
        
        public VolumeMetaClient() {
        }
        
        public VolumeMetaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VolumeMetaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VolumeMetaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VolumeMetaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.Scale GetScale() {
            return base.Channel.GetScale();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnnotationService.ICircuit")]
    public interface ICircuit {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getGraph", ReplyAction="http://tempuri.org/ICircuit/getGraphResponse")]
        AnnotationVizLib.AnnotationService.Graphx getGraph(int cellID, int numHops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getStructuresByTypeID", ReplyAction="http://tempuri.org/ICircuit/getStructuresByTypeIDResponse")]
        long[] getStructuresByTypeID(int typeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getSynapses", ReplyAction="http://tempuri.org/ICircuit/getSynapsesResponse")]
        string[] getSynapses(int cellID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getSynapseStats", ReplyAction="http://tempuri.org/ICircuit/getSynapseStatsResponse")]
        AnnotationVizLib.AnnotationService.SynapseObject getSynapseStats();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getTopConnectedStructures", ReplyAction="http://tempuri.org/ICircuit/getTopConnectedStructuresResponse")]
        string[] getTopConnectedStructures(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICircuit/getTopConnectedCells", ReplyAction="http://tempuri.org/ICircuit/getTopConnectedCellsResponse")]
        string[] getTopConnectedCells();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICircuitChannel : AnnotationVizLibTests.AnnotationService.ICircuit, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CircuitClient : System.ServiceModel.ClientBase<AnnotationVizLibTests.AnnotationService.ICircuit>, AnnotationVizLibTests.AnnotationService.ICircuit {
        
        public CircuitClient() {
        }
        
        public CircuitClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CircuitClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CircuitClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CircuitClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AnnotationVizLib.AnnotationService.Graphx getGraph(int cellID, int numHops) {
            return base.Channel.getGraph(cellID, numHops);
        }
        
        public long[] getStructuresByTypeID(int typeID) {
            return base.Channel.getStructuresByTypeID(typeID);
        }
        
        public string[] getSynapses(int cellID) {
            return base.Channel.getSynapses(cellID);
        }
        
        public AnnotationVizLib.AnnotationService.SynapseObject getSynapseStats() {
            return base.Channel.getSynapseStats();
        }
        
        public string[] getTopConnectedStructures(int num) {
            return base.Channel.getTopConnectedStructures(num);
        }
        
        public string[] getTopConnectedCells() {
            return base.Channel.getTopConnectedCells();
        }
    }
}
