<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelInstructions.Text" xml:space="preserve">
    <value>Split a structure into two parts.
The Keep ID will retain the same structure number. 
Location IDs can be found in the context menu of annotations.

This operation requires administrator permission level.

</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFlip.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tFg//PB//jbqDTs9yBAAAAAASUVORK5CYII=
</value>
  </data>
</root>